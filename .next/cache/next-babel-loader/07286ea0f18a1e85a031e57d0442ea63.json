{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Tv = function Tv(_ref) {\n  var shows = _ref.shows;\n  return __jsx(Layout, null, __jsx(\"h1\", {\n    className: \"jsx-2367960123\"\n  }, \"Batman Tv show\"), __jsx(\"ul\", {\n    className: \"jsx-2367960123\"\n  }, shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      className: \"jsx-2367960123\"\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id)\n    }, __jsx(\"a\", {\n      className: \"jsx-2367960123\"\n    }, show.name)));\n  })), __jsx(_JSXStyle, {\n    id: \"2367960123\"\n  }, [\"a.jsx-2367960123{color:#99ffcc;}\"]));\n};\n\nTv.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(data);\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Tv;","map":null,"metadata":{},"sourceType":"module"}