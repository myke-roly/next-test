{"ast":null,"code":"var _jsxFileName = \"/home/mike/Desktop/learning/nextjs-test/pages/tv.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport axios from 'axios';\n\nconst Tv = ({\n  shows,\n  message\n}) => {\n  console.log(message);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"tv\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"this is a tv route\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-1934089834\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"jsx-1934089834\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Batman Tv show\"), __jsx(\"ul\", {\n    className: \"jsx-1934089834\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, shows.map(show => __jsx(\"li\", {\n    key: show.id,\n    className: \"jsx-1934089834\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: `/p/${show.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"jsx-1934089834\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, show.name))))), __jsx(_JSXStyle, {\n    id: \"1934089834\",\n    __self: this\n  }, \"a.jsx-1934089834{color:#99ffcc;}button.jsx-1934089834{margin-top:2rem;padding:.5rem 1rem;background:black;border:none;color:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21pa2UvRGVza3RvcC9sZWFybmluZy9uZXh0anMtdGVzdC9wYWdlcy90di5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0QmEsQUFHK0IsQUFHRSxjQUZsQixFQUdxQixtQkFDRixpQkFDTCxZQUNBLFlBQ2QiLCJmaWxlIjoiL2hvbWUvbWlrZS9EZXNrdG9wL2xlYXJuaW5nL25leHRqcy10ZXN0L3BhZ2VzL3R2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnXG5cbmNvbnN0IFR2ID0gKHsgc2hvd3MsIG1lc3NhZ2UgfSkgPT4ge1xuICBjb25zb2xlLmxvZyhtZXNzYWdlKTtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT50djwvdGl0bGU+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCJ0aGlzIGlzIGEgdHYgcm91dGVcIiAvPlxuICAgICAgPC9IZWFkPlxuICAgICAgPExheW91dD5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8aDI+QmF0bWFuIFR2IHNob3c8L2gyPlxuICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgIHtzaG93cy5tYXAoKHNob3cpID0+IChcbiAgICAgICAgICAgICAgPGxpIGtleT17c2hvdy5pZH0+XG4gICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7c2hvdy5pZH1gfT5cbiAgICAgICAgICAgICAgICAgIDxhPntzaG93Lm5hbWV9PC9hPlxuICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgey8qIDxidXR0b24+e21zZy5tZXNzYWdlfTwvYnV0dG9uPiAqL31cbiAgICAgICAgICA8c3R5bGUganN4PlxuICAgICAgICAgICAge2BcbiAgICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICM5OWZmY2M7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnV0dG9uIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAycmVtO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IC41cmVtIDFyZW07XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmxhY2s7XG4gICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH1cbiAgICAgICAgICA8L3N0eWxlPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvTGF5b3V0PlxuICAgIDwvPlxuICApO1xufTtcblxuVHYuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgKGN0eCkgPT4ge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zZWFyY2gvc2hvd3M/cT1hdmVuZ2VycycpO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgY29uc3QgdXJsID0gYCR7cHJvY2Vzcy5lbnYuVVJMfS9hdXRoYDtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2F1dGgnKTtcbiAgY29uc3Qge21lc3NhZ2V9ID0gYXdhaXQgcmVzcG9uc2U7XG5cbiAgcmV0dXJuIHsgbWVzc2FnZSwgc2hvd3M6IGRhdGEubWFwKChlbnRyeSkgPT4gZW50cnkuc2hvdykgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFR2O1xuIl19 */\\n/*@ sourceURL=/home/mike/Desktop/learning/nextjs-test/pages/tv.js */\"))));\n};\n\nTv.getInitialProps = async ctx => {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=avengers');\n  const data = await res.json();\n  const url = `${process.env.URL}/auth`;\n  const response = await fetch('http://localhost:3000/auth');\n  const {\n    message\n  } = await response;\n  return {\n    message,\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Tv;","map":{"version":3,"sources":["/home/mike/Desktop/learning/nextjs-test/pages/tv.js"],"names":["Layout","Link","Head","fetch","axios","Tv","shows","message","console","log","map","show","id","name","getInitialProps","ctx","res","data","json","url","process","env","URL","response","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,EAAE,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAC,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACI,GAAN,CAAWC,IAAD,IACT;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,IAAT,CADF,CADF,CADD,CADH,CAFF;AAAA;AAAA;AAAA,unFADF,CALF,CADF;AAqCD,CAvCD;;AAyCAR,EAAE,CAACS,eAAH,GAAqB,MAAOC,GAAP,IAAe;AAClC,QAAMC,GAAG,GAAG,MAAMb,KAAK,CAAC,gDAAD,CAAvB;AACA,QAAMc,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,QAAMC,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,GAAI,OAA/B;AACA,QAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAAC,4BAAD,CAA5B;AACA,QAAM;AAACI,IAAAA;AAAD,MAAY,MAAMgB,QAAxB;AAEA,SAAO;AAAEhB,IAAAA,OAAF;AAAWD,IAAAA,KAAK,EAAEW,IAAI,CAACP,GAAL,CAAUc,KAAD,IAAWA,KAAK,CAACb,IAA1B;AAAlB,GAAP;AACD,CARD;;AAUA,eAAeN,EAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport axios from 'axios'\n\nconst Tv = ({ shows, message }) => {\n  console.log(message);\n  return (\n    <>\n      <Head>\n        <title>tv</title>\n        <meta name=\"description\" content=\"this is a tv route\" />\n      </Head>\n      <Layout>\n        <div>\n          <h2>Batman Tv show</h2>\n          <ul>\n            {shows.map((show) => (\n              <li key={show.id}>\n                <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n                  <a>{show.name}</a>\n                </Link>\n              </li>\n            ))}\n          </ul>\n          {/* <button>{msg.message}</button> */}\n          <style jsx>\n            {`\n              a {\n                color: #99ffcc;\n              }\n              button {\n                margin-top: 2rem;\n                padding: .5rem 1rem;\n                background: black;\n                border: none;\n                color: white;\n              }\n            `}\n          </style>\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nTv.getInitialProps = async (ctx) => {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=avengers');\n  const data = await res.json();\n  const url = `${process.env.URL}/auth`;\n  const response = await fetch('http://localhost:3000/auth');\n  const {message} = await response;\n\n  return { message, shows: data.map((entry) => entry.show) };\n};\n\nexport default Tv;\n"]},"metadata":{},"sourceType":"module"}