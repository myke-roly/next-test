{"ast":null,"code":"var _jsxFileName = \"/home/mike/Desktop/nextjs-test/pages/tv.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\n\nconst Tv = ({\n  shows\n}) => __jsx(React.Fragment, null, __jsx(Head, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, __jsx(\"title\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"tv\"), __jsx(\"meta\", {\n  name: \"description\",\n  content: \"this is a tv route\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n})), __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"jsx-768236203\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  className: \"jsx-768236203\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"Batman Tv show\"), __jsx(\"ul\", {\n  className: \"jsx-768236203\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, shows.map(show => __jsx(\"li\", {\n  key: show.id,\n  className: \"jsx-768236203\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: \"jsx-768236203\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, show.name))))), __jsx(_JSXStyle, {\n  id: \"768236203\",\n  __self: this\n}, \"a.jsx-768236203{color:#99ffcc;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21pa2UvRGVza3RvcC9uZXh0anMtdGVzdC9wYWdlcy90di5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3QlcsQUFHNkIsY0FDaEIiLCJmaWxlIjoiL2hvbWUvbWlrZS9EZXNrdG9wL25leHRqcy10ZXN0L3BhZ2VzL3R2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5cbmNvbnN0IFR2ID0gKHsgc2hvd3MgfSkgPT4gKFxuICA8PlxuICAgIDxIZWFkPlxuICAgICAgPHRpdGxlPnR2PC90aXRsZT5cbiAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCJ0aGlzIGlzIGEgdHYgcm91dGVcIiAvPlxuICAgIDwvSGVhZD5cbiAgICA8TGF5b3V0PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGgxPkJhdG1hbiBUdiBzaG93PC9oMT5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIHtzaG93cy5tYXAoc2hvdyA9PiAoXG4gICAgICAgICAgICA8bGkga2V5PXtzaG93LmlkfT5cbiAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7c2hvdy5pZH1gfT5cbiAgICAgICAgICAgICAgICA8YT57c2hvdy5uYW1lfTwvYT5cbiAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC91bD5cbiAgICAgICAgPHN0eWxlIGpzeD5cbiAgICAgICAgICB7YFxuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgIGNvbG9yOiAjOTlmZmNjO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIGB9XG4gICAgICAgIDwvc3R5bGU+XG4gICAgICA8L2Rpdj5cbiAgICA8L0xheW91dD5cbiAgPC8+XG4pO1xuXG5Udi5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS50dm1hemUuY29tL3NlYXJjaC9zaG93cz9xPWJhdG1hbicpO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgY29uc29sZS5sb2coZGF0YSk7XG5cbiAgcmV0dXJuIHsgc2hvd3M6IGRhdGEubWFwKGVudHJ5ID0+IGVudHJ5LnNob3cpIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBUdjtcbiJdfQ== */\\n/*@ sourceURL=/home/mike/Desktop/nextjs-test/pages/tv.js */\"))));\n\nTv.getInitialProps = async () => {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(data);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Tv;","map":{"version":3,"sources":["/home/mike/Desktop/nextjs-test/pages/tv.js"],"names":["Layout","Link","Head","fetch","Tv","shows","map","show","id","name","getInitialProps","res","data","json","console","log","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,EAAE,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACT,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,EAAA,IAAI,EAAC,aAAX;AAAyB,EAAA,OAAO,EAAC,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,EAKE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACb;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,IAAT,CADF,CADF,CADD,CADH,CAFF;AAAA;AAAA;AAAA,gwDADF,CALF,CADF;;AA8BAL,EAAE,CAACM,eAAH,GAAqB,YAAY;AAC/B,QAAMC,GAAG,GAAG,MAAMR,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMS,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SAAO;AAAEP,IAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAASU,KAAK,IAAIA,KAAK,CAACT,IAAxB;AAAT,GAAP;AACD,CAND;;AAQA,eAAeH,EAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\n\nconst Tv = ({ shows }) => (\n  <>\n    <Head>\n      <title>tv</title>\n      <meta name=\"description\" content=\"this is a tv route\" />\n    </Head>\n    <Layout>\n      <div>\n        <h1>Batman Tv show</h1>\n        <ul>\n          {shows.map(show => (\n            <li key={show.id}>\n              <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n                <a>{show.name}</a>\n              </Link>\n            </li>\n          ))}\n        </ul>\n        <style jsx>\n          {`\n            a {\n              color: #99ffcc;\n            }\n          `}\n        </style>\n      </div>\n    </Layout>\n  </>\n);\n\nTv.getInitialProps = async () => {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(data);\n\n  return { shows: data.map(entry => entry.show) };\n};\n\nexport default Tv;\n"]},"metadata":{},"sourceType":"module"}