{"ast":null,"code":"import allQuotes from '../../quotes.json';\nimport Cors from 'micro-cors';\nimport mongoose, { mongo } from 'mongoose';\nconst cors = Cors({\n  allowMethods: ['GET', 'HEAD']\n});\nconst UserSchema = mongoose.Schema({\n  name: String,\n  date: Date.now()\n});\nconst model = mongoose.model('user', UserSchema);\nmongoose.connect(process.env.MONGO_URL, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\nconst handler = async (req, res) => {\n  let user = await model.find({\n    name\n  });\n  if (user) console.log(user);\n  user = new model(req.query);\n  await ser.save();\n  res.status(200).json(user);\n};\n\nexport default cors(handler);","map":{"version":3,"sources":["/home/mike/Desktop/learning/nextjs-test/pages/api/randomQuote.js"],"names":["allQuotes","Cors","mongoose","mongo","cors","allowMethods","UserSchema","Schema","name","String","date","Date","now","model","connect","process","env","MONGO_URL","useNewUrlParser","useUnifiedTopology","handler","req","res","user","find","console","log","query","ser","save","status","json"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,IAAmBC,KAAnB,QAAgC,UAAhC;AAEA,MAAMC,IAAI,GAAGH,IAAI,CAAC;AAChBI,EAAAA,YAAY,EAAE,CAAC,KAAD,EAAQ,MAAR;AADE,CAAD,CAAjB;AAIA,MAAMC,UAAU,GAAGJ,QAAQ,CAACK,MAAT,CAAgB;AACjCC,EAAAA,IAAI,EAACC,MAD4B;AAEjCC,EAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAF2B,CAAhB,CAAnB;AAKA,MAAMC,KAAK,GAAGX,QAAQ,CAACW,KAAT,CAAe,MAAf,EAAuBP,UAAvB,CAAd;AAEAJ,QAAQ,CAACY,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AACtCC,EAAAA,eAAe,EAAE,IADqB;AAEtCC,EAAAA,kBAAkB,EAAE;AAFkB,CAAxC;;AAKA,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAElC,MAAIC,IAAI,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW;AAAChB,IAAAA;AAAD,GAAX,CAAjB;AACA,MAAGe,IAAH,EAASE,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAETA,EAAAA,IAAI,GAAG,IAAIV,KAAJ,CAAUQ,GAAG,CAACM,KAAd,CAAP;AAEA,QAAMC,GAAG,CAACC,IAAJ,EAAN;AACAP,EAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBR,IAArB;AACD,CATD;;AAWA,eAAenB,IAAI,CAACgB,OAAD,CAAnB","sourcesContent":["import allQuotes from '../../quotes.json';\nimport Cors from 'micro-cors';\nimport mongoose, { mongo } from 'mongoose';\n\nconst cors = Cors({\n  allowMethods: ['GET', 'HEAD'],\n});\n\nconst UserSchema = mongoose.Schema({\n  name:String,\n  date: Date.now()\n})\n\nconst model = mongoose.model('user', UserSchema);\n\nmongoose.connect(process.env.MONGO_URL, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n})\n\nconst handler = async (req, res) => {\n\n  let user = await model.find({name});\n  if(user) console.log(user);\n\n  user = new model(req.query)\n\n  await ser.save();\n  res.status(200).json(user)\n};\n\nexport default cors(handler);"]},"metadata":{},"sourceType":"module"}