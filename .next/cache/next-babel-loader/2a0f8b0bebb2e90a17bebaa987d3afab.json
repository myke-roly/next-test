{"ast":null,"code":"var _jsxFileName = \"/home/mike/Desktop/nextjs-test/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport Layout from '../components/MyLayout';\n\nconst PostLink = ({\n  id,\n  title\n}) => __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/post/[id]\",\n  as: `/post/${id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, title)));\n\nexport default function Blog() {\n  const {\n    0: state,\n    1: setState\n  } = useState([{\n    id: 'hello-next',\n    title: 'Hello Next.js'\n  }, {\n    id: 'learn-next',\n    title: 'Learn Next.js is awesome'\n  }, {\n    id: 'deploy-next',\n    title: 'Deploy apps with Zeit'\n  }]);\n  const {\n    0: link,\n    1: setLink\n  } = useState('');\n\n  const addLink = e => {\n    e.preventDefault();\n    setState([...state, {\n      id: link,\n      title: link\n    }]);\n    setLink('');\n  };\n\n  const newRoute = () => {\n    Router.beforePopState(() => {\n      // I only want to allow these two routes!\n      if (as !== '/' && as !== '/other') {\n        // Have SSR render bad routes as a 404.\n        window.location.href = as;\n        return false;\n      }\n\n      return true;\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    onClick: newRoute,\n    className: \"jsx-3569580810\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"My Blog\"), __jsx(\"form\", {\n    onSubmit: addLink,\n    className: \"jsx-3569580810\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"value...\",\n    value: link,\n    onChange: e => setLink(e.target.value),\n    className: \"jsx-3569580810\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), __jsx(\"ul\", {\n    className: \"jsx-3569580810\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, state.map(post => __jsx(PostLink, {\n    key: post.id,\n    id: post.id,\n    title: post.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))), __jsx(_JSXStyle, {\n    id: \"3569580810\",\n    __self: this\n  }, \"h2{font-size:1.2rem;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21pa2UvRGVza3RvcC9uZXh0anMtdGVzdC9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2RDJCLEFBRzhCLGlCQUNRLHlCQUMzQiIsImZpbGUiOiIvaG9tZS9taWtlL0Rlc2t0b3AvbmV4dGpzLXRlc3QvcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgUm91dGVyIGZyb20gJ25leHQvcm91dGVyJztcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9NeUxheW91dCc7XG5cbmNvbnN0IFBvc3RMaW5rID0gKHsgaWQsIHRpdGxlIH0pID0+IChcbiAgPGxpPlxuICAgIHsvKiBObyB0ZW5lciBydXRhcyBjb24gZWwgbWlzbW8gcGFyYW1ldHJvIHtcImZvb1wiOiBcImFiY1wiLCBcImZvb1wiOiBcIjQ1NlwifSAvYWJjP2Zvbz00NTYgKi99XG4gICAgey8qIFsuLi5wYXJhbXNdIEBjYW1wdHVyYW1vcyB0b2RvcyBsYXMgcnV0YXMgL2EvYi9jL2QuLi4gKi99XG4gICAgPExpbmsgaHJlZj1cIi9wb3N0L1tpZF1cIiBhcz17YC9wb3N0LyR7aWR9YH0+XG4gICAgICA8YT57dGl0bGV9PC9hPlxuICAgIDwvTGluaz5cbiAgPC9saT5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEJsb2coKSB7XG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoW1xuICAgIHsgaWQ6ICdoZWxsby1uZXh0JywgdGl0bGU6ICdIZWxsbyBOZXh0LmpzJyB9LFxuICAgIHsgaWQ6ICdsZWFybi1uZXh0JywgdGl0bGU6ICdMZWFybiBOZXh0LmpzIGlzIGF3ZXNvbWUnIH0sXG4gICAgeyBpZDogJ2RlcGxveS1uZXh0JywgdGl0bGU6ICdEZXBsb3kgYXBwcyB3aXRoIFplaXQnIH1cbiAgXSk7XG5cbiAgY29uc3QgW2xpbmssIHNldExpbmtdID0gdXNlU3RhdGUoJycpO1xuXG4gIGNvbnN0IGFkZExpbmsgPSBlID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgc2V0U3RhdGUoWy4uLnN0YXRlLCB7IGlkOiBsaW5rLCB0aXRsZTogbGluayB9XSk7XG4gICAgc2V0TGluaygnJyk7XG4gIH07XG5cblxuICBjb25zdCBuZXdSb3V0ZSA9ICgpID0+IHtcbiAgICBSb3V0ZXIuYmVmb3JlUG9wU3RhdGUoKCkgPT4ge1xuICAgICAgLy8gSSBvbmx5IHdhbnQgdG8gYWxsb3cgdGhlc2UgdHdvIHJvdXRlcyFcbiAgICAgIGlmIChhcyAhPT0gJy8nICYmIGFzICE9PSAnL290aGVyJykge1xuICAgICAgICAvLyBIYXZlIFNTUiByZW5kZXIgYmFkIHJvdXRlcyBhcyBhIDQwNC5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBhc1xuICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgIH1cbiAgICBcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfSlcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxMYXlvdXQ+XG4gICAgICAgIDxoMiBvbkNsaWNrPXtuZXdSb3V0ZX0+TXkgQmxvZzwvaDI+XG4gICAgICAgIDxmb3JtIG9uU3VibWl0PXthZGRMaW5rfT5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwidmFsdWUuLi5cIlxuICAgICAgICAgICAgdmFsdWU9e2xpbmt9XG4gICAgICAgICAgICBvbkNoYW5nZT17ZSA9PiBzZXRMaW5rKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Zvcm0+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICB7c3RhdGUubWFwKHBvc3QgPT4gKFxuICAgICAgICAgICAgPFBvc3RMaW5rIGtleT17cG9zdC5pZH0gaWQ9e3Bvc3QuaWR9IHRpdGxlPXtwb3N0LnRpdGxlfSAvPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L3VsPlxuICAgICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICB9XG4gICAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDwvTGF5b3V0PlxuICAgIDwvPlxuICApO1xufVxuIl19 */\\n/*@ sourceURL=/home/mike/Desktop/nextjs-test/pages/index.js */\")));\n}","map":{"version":3,"sources":["/home/mike/Desktop/nextjs-test/pages/index.js"],"names":["useState","Link","Router","Layout","PostLink","id","title","Blog","state","setState","link","setLink","addLink","e","preventDefault","newRoute","beforePopState","as","window","location","href","target","value","map","post"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,KACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAGE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,YAAX;AAAwB,EAAA,EAAE,EAAG,SAAQD,EAAG,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIC,KAAJ,CADF,CAHF,CADF;;AAUA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,CACjC;AAAEK,IAAAA,EAAE,EAAE,YAAN;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GADiC,EAEjC;AAAED,IAAAA,EAAE,EAAE,YAAN;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAFiC,EAGjC;AAAED,IAAAA,EAAE,EAAE,aAAN;AAAqBC,IAAAA,KAAK,EAAE;AAA5B,GAHiC,CAAD,CAAlC;AAMA,QAAM;AAAA,OAACI,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMY,OAAO,GAAGC,CAAC,IAAI;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEH,MAAAA,EAAE,EAAEK,IAAN;AAAYJ,MAAAA,KAAK,EAAEI;AAAnB,KAAX,CAAD,CAAR;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAJD;;AAOA,QAAMI,QAAQ,GAAG,MAAM;AACrBb,IAAAA,MAAM,CAACc,cAAP,CAAsB,MAAM;AAC1B;AACA,UAAIC,EAAE,KAAK,GAAP,IAAcA,EAAE,KAAK,QAAzB,EAAmC;AACjC;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBH,EAAvB;AACA,eAAO,KAAP;AACD;;AAED,aAAO,IAAP;AACD,KATD;AAUD,GAXD;;AAaA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,OAAO,EAAEF,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAM,IAAA,QAAQ,EAAEH,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,KAAK,EAAEF,IAHT;AAIE,IAAA,QAAQ,EAAEG,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACQ,MAAF,CAASC,KAAV,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,CAACe,GAAN,CAAUC,IAAI,IACb,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACnB,EAApB;AAAwB,IAAA,EAAE,EAAEmB,IAAI,CAACnB,EAAjC;AAAqC,IAAA,KAAK,EAAEmB,IAAI,CAAClB,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAVF;AAAA;AAAA;AAAA,w2FADF,CADF;AA0BD","sourcesContent":["import { useState } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport Layout from '../components/MyLayout';\n\nconst PostLink = ({ id, title }) => (\n  <li>\n    {/* No tener rutas con el mismo parametro {\"foo\": \"abc\", \"foo\": \"456\"} /abc?foo=456 */}\n    {/* [...params] @campturamos todos las rutas /a/b/c/d... */}\n    <Link href=\"/post/[id]\" as={`/post/${id}`}>\n      <a>{title}</a>\n    </Link>\n  </li>\n);\n\nexport default function Blog() {\n  const [state, setState] = useState([\n    { id: 'hello-next', title: 'Hello Next.js' },\n    { id: 'learn-next', title: 'Learn Next.js is awesome' },\n    { id: 'deploy-next', title: 'Deploy apps with Zeit' }\n  ]);\n\n  const [link, setLink] = useState('');\n\n  const addLink = e => {\n    e.preventDefault();\n    setState([...state, { id: link, title: link }]);\n    setLink('');\n  };\n\n\n  const newRoute = () => {\n    Router.beforePopState(() => {\n      // I only want to allow these two routes!\n      if (as !== '/' && as !== '/other') {\n        // Have SSR render bad routes as a 404.\n        window.location.href = as\n        return false\n      }\n    \n      return true\n    })\n  }\n\n  return (\n    <>\n      <Layout>\n        <h2 onClick={newRoute}>My Blog</h2>\n        <form onSubmit={addLink}>\n          <input\n            type=\"text\"\n            placeholder=\"value...\"\n            value={link}\n            onChange={e => setLink(e.target.value)}\n          />\n        </form>\n        <ul>\n          {state.map(post => (\n            <PostLink key={post.id} id={post.id} title={post.title} />\n          ))}\n        </ul>\n        <style jsx global>{`\n          h2 {\n            font-size: 1.2rem;\n            text-transform: uppercase;\n          }\n        `}</style>\n      </Layout>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}