{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Layout from '../components/MyLayout';\nimport Head from 'next/head';\nimport axios from 'axios';\nexport default function Api() {\n  const {\n    0: list,\n    1: setList\n  } = useState({});\n  useEffect(() => {\n    const getUser = async () => {\n      const response = await axios.get(`/api/getApi`);\n      setList(response.data);\n      console.log(response.data);\n    };\n\n    getUser();\n  }, []);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    name: ''\n  });\n\n  const fetchPost = async d => {\n    const response = await axios.get('/api/randomQuote'); // const post = await response;\n\n    console.log(response);\n  };\n\n  const getuser = e => {\n    e.preventDefault();\n    fetchPost();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"quotes\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"this is a quote route\"\n  })), __jsx(Layout, null, __jsx(\"main\", {\n    className: \"jsx-2543870573\" + \" \" + \"quote\"\n  }, __jsx(\"h3\", {\n    className: \"jsx-2543870573\"\n  }, \"User List\"), __jsx(\"ul\", {\n    className: \"jsx-2543870573\"\n  }, list && __jsx(\"li\", {\n    className: \"jsx-2543870573\"\n  }, list.name, \" - \", list.email))), __jsx(\"button\", {\n    type: \"submit\",\n    value: \"enviar\",\n    onClick: getuser,\n    className: \"jsx-2543870573\" + \" \" + \"btn\"\n  }, \"Get data\"), __jsx(_JSXStyle, {\n    id: \"2543870573\"\n  }, \"main.jsx-2543870573{margin-top:1rem;margin:1rem;color:#fff;}li.jsx-2543870573{margin:1rem;}.btn.jsx-2543870573{padding:0.7rem 1rem;border-radius:5px;margin:0.5rem 0;background:black;border:none;color:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21pa2UvRGVza3RvcC9sZWFybmluZy9uZXh0anMtdGVzdC9wYWdlcy9xdW90ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtRG9CLEFBRzZCLEFBS0osQUFHUSxZQUZ0QixJQUxjLElBUU0sUUFQUCxVQVFLLENBUGxCLGVBUW1CLGlCQUNMLFlBQ0EsWUFDZCIsImZpbGUiOiIvaG9tZS9taWtlL0Rlc2t0b3AvbGVhcm5pbmcvbmV4dGpzLXRlc3QvcGFnZXMvcXVvdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCc7XG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBcGkoKSB7XG4gIGNvbnN0IFtsaXN0LCBzZXRMaXN0XSA9IHVzZVN0YXRlKHt9KTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGdldFVzZXIgPSBhc3luYyAoKSA9PiB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgL2FwaS9nZXRBcGlgKTtcbiAgICAgIHNldExpc3QocmVzcG9uc2UuZGF0YSk7XG4gICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTtcbiAgICB9O1xuICAgIGdldFVzZXIoKTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoeyBuYW1lOiAnJyB9KTtcblxuICBjb25zdCBmZXRjaFBvc3QgPSBhc3luYyAoZCkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCcvYXBpL3JhbmRvbVF1b3RlJyk7XG4gICAgLy8gY29uc3QgcG9zdCA9IGF3YWl0IHJlc3BvbnNlO1xuICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgfTtcblxuICBjb25zdCBnZXR1c2VyID0gKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZmV0Y2hQb3N0KCk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT5xdW90ZXM8L3RpdGxlPlxuICAgICAgICA8bWV0YSBuYW1lPVwiZGVzY3JpcHRpb25cIiBjb250ZW50PVwidGhpcyBpcyBhIHF1b3RlIHJvdXRlXCIgLz5cbiAgICAgIDwvSGVhZD5cbiAgICAgIDxMYXlvdXQ+XG4gICAgICAgIDxtYWluIGNsYXNzTmFtZT1cInF1b3RlXCI+XG4gICAgICAgICAgPGgzPlVzZXIgTGlzdDwvaDM+XG4gICAgICAgICAgPHVsPlxuICAgICAgICAgICAge2xpc3QgJiYgKFxuICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAge2xpc3QubmFtZX0gLSB7bGlzdC5lbWFpbH1cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC91bD5cbiAgICAgICAgPC9tYWluPlxuICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0blwiIHR5cGU9XCJzdWJtaXRcIiB2YWx1ZT1cImVudmlhclwiIG9uQ2xpY2s9e2dldHVzZXJ9PlxuICAgICAgICAgIEdldCBkYXRhXG4gICAgICAgIDwvYnV0dG9uPlxuXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICBtYWluIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDFyZW07XG4gICAgICAgICAgICBtYXJnaW46IDFyZW07XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICB9XG4gICAgICAgICAgbGkge1xuICAgICAgICAgICAgbWFyZ2luOiAxcmVtO1xuICAgICAgICAgIH1cbiAgICAgICAgICAuYnRuIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAuN3JlbSAxcmVtO1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgICAgICAgbWFyZ2luOiAwLjVyZW0gMDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrO1xuICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9MYXlvdXQ+XG4gICAgPC8+XG4gICk7XG59XG4iXX0= */\\n/*@ sourceURL=/home/mike/Desktop/learning/nextjs-test/pages/quote.js */\")));\n}","map":{"version":3,"sources":["/home/mike/Desktop/learning/nextjs-test/pages/quote.js"],"names":["useState","useEffect","Layout","Head","axios","Api","list","setList","getUser","response","get","data","console","log","state","setState","name","fetchPost","d","getuser","e","preventDefault","email"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,OAAO,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,aAAX,CAAvB;AACAH,MAAAA,OAAO,CAACE,QAAQ,CAACE,IAAV,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACD,KAJD;;AAKAH,IAAAA,OAAO;AACR,GAPQ,EAON,EAPM,CAAT;AASA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBf,QAAQ,CAAC;AAAEgB,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAlC;;AAEA,QAAMC,SAAS,GAAG,MAAOC,CAAP,IAAa;AAC7B,UAAMT,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,kBAAV,CAAvB,CAD6B,CAE7B;;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,GAJD;;AAMA,QAAMU,OAAO,GAAIC,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,SAAS;AACV,GAHD;;AAKA,SACE,4BACE,MAAC,IAAD,QACE,8BADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAC;AAAjC,IAFF,CADF,EAKE,MAAC,MAAD,QACE;AAAA,wCAAgB;AAAhB,KACE;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA,KACGX,IAAI,IACH;AAAA;AAAA,KACGA,IAAI,CAACU,IADR,SACiBV,IAAI,CAACgB,KADtB,CAFJ,CAFF,CADF,EAWE;AAAwB,IAAA,IAAI,EAAC,QAA7B;AAAsC,IAAA,KAAK,EAAC,QAA5C;AAAqD,IAAA,OAAO,EAAEH,OAA9D;AAAA,wCAAkB;AAAlB,gBAXF;AAAA;AAAA,0+FALF,CADF;AA0CD","sourcesContent":["import { useState, useEffect } from 'react';\nimport Layout from '../components/MyLayout';\nimport Head from 'next/head';\nimport axios from 'axios';\n\nexport default function Api() {\n  const [list, setList] = useState({});\n\n  useEffect(() => {\n    const getUser = async () => {\n      const response = await axios.get(`/api/getApi`);\n      setList(response.data);\n      console.log(response.data);\n    };\n    getUser();\n  }, []);\n\n  const [state, setState] = useState({ name: '' });\n\n  const fetchPost = async (d) => {\n    const response = await axios.get('/api/randomQuote');\n    // const post = await response;\n    console.log(response);\n  };\n\n  const getuser = (e) => {\n    e.preventDefault();\n    fetchPost();\n  };\n\n  return (\n    <>\n      <Head>\n        <title>quotes</title>\n        <meta name=\"description\" content=\"this is a quote route\" />\n      </Head>\n      <Layout>\n        <main className=\"quote\">\n          <h3>User List</h3>\n          <ul>\n            {list && (\n              <li>\n                {list.name} - {list.email}\n              </li>\n            )}\n          </ul>\n        </main>\n        <button className=\"btn\" type=\"submit\" value=\"enviar\" onClick={getuser}>\n          Get data\n        </button>\n\n        <style jsx>{`\n          main {\n            margin-top: 1rem;\n            margin: 1rem;\n            color: #fff;\n          }\n          li {\n            margin: 1rem;\n          }\n          .btn {\n            padding: 0.7rem 1rem;\n            border-radius: 5px;\n            margin: 0.5rem 0;\n            background: black;\n            border: none;\n            color: white;\n          }\n        `}</style>\n      </Layout>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}