{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Layout from '../components/MyLayout';\nimport Head from 'next/head';\nimport axios from 'axios';\nexport default function Api() {\n  const {\n    0: list,\n    1: setList\n  } = useState({});\n  useEffect(() => {\n    const getUser = async () => {\n      const response = await axios.get(`/api/getApi`);\n      setList(response.data);\n      console.log(response.data);\n    };\n\n    getUser();\n  }, []);\n  const {\n    0: state,\n    1: setState\n  } = useState();\n\n  const fetchPost = async d => {\n    const response = await axios.post('/api/randomQuote', d);\n    console.log(response);\n  };\n\n  const getuser = e => {\n    e.preventDefault();\n    fetchPost(state);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"quotes\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"this is a quote route\"\n  })), __jsx(Layout, null, __jsx(\"main\", {\n    className: \"jsx-3199388334\" + \" \" + \"quote\"\n  }, __jsx(\"h3\", {\n    className: \"jsx-3199388334\"\n  }, \"User List\"), __jsx(\"ul\", {\n    className: \"jsx-3199388334\"\n  }, list && __jsx(\"li\", {\n    className: \"jsx-3199388334\"\n  }, list.name, \" - \", list.email))), __jsx(\"form\", {\n    onSubmit: getuser,\n    className: \"jsx-3199388334\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: state,\n    onChange: e => setState(e.target.value),\n    className: \"jsx-3199388334\"\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"enviar\",\n    className: \"jsx-3199388334\"\n  })), __jsx(_JSXStyle, {\n    id: \"3199388334\"\n  }, \"main.jsx-3199388334{margin-top:1rem;margin:1rem;color:#fff;}li.jsx-3199388334{margin:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21pa2UvRGVza3RvcC9sZWFybmluZy9uZXh0anMtdGVzdC9wYWdlcy9xdW90ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRG9CLEFBRzZCLEFBS0osWUFDZCxJQUxjLFlBQ0QsV0FDYiIsImZpbGUiOiIvaG9tZS9taWtlL0Rlc2t0b3AvbGVhcm5pbmcvbmV4dGpzLXRlc3QvcGFnZXMvcXVvdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCc7XG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBcGkoKSB7XG4gIGNvbnN0IFtsaXN0LCBzZXRMaXN0XSA9IHVzZVN0YXRlKHt9KTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGdldFVzZXIgPSBhc3luYyAoKSA9PiB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgL2FwaS9nZXRBcGlgKTtcbiAgICAgIHNldExpc3QocmVzcG9uc2UuZGF0YSk7XG4gICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTtcbiAgICB9O1xuICAgIGdldFVzZXIoKTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoKTtcblxuICBjb25zdCBmZXRjaFBvc3QgPSBhc3luYyAoZCkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdCgnL2FwaS9yYW5kb21RdW90ZScsIGQpO1xuICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgfTtcblxuICBjb25zdCBnZXR1c2VyID0gKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZmV0Y2hQb3N0KHN0YXRlKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPnF1b3RlczwvdGl0bGU+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCJ0aGlzIGlzIGEgcXVvdGUgcm91dGVcIiAvPlxuICAgICAgPC9IZWFkPlxuICAgICAgPExheW91dD5cbiAgICAgICAgPG1haW4gY2xhc3NOYW1lPVwicXVvdGVcIj5cbiAgICAgICAgICA8aDM+VXNlciBMaXN0PC9oMz5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICB7bGlzdCAmJiAoXG4gICAgICAgICAgICAgIDxsaT57bGlzdC5uYW1lfSAtIHtsaXN0LmVtYWlsfTwvbGk+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvbWFpbj5cblxuICAgICAgICA8Zm9ybSBvblN1Ym1pdD17Z2V0dXNlcn0+XG4gICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICB2YWx1ZT17c3RhdGV9XG4gICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFN0YXRlKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwic3VibWl0XCIgdmFsdWU9XCJlbnZpYXJcIiAvPlxuICAgICAgICA8L2Zvcm0+XG5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgIG1haW4ge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogMXJlbTtcbiAgICAgICAgICAgIG1hcmdpbjogMXJlbTtcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgIH1cbiAgICAgICAgICBsaSB7XG4gICAgICAgICAgICBtYXJnaW46IDFyZW07XG4gICAgICAgICAgfVxuICAgICAgICBgfTwvc3R5bGU+XG4gICAgICA8L0xheW91dD5cbiAgICA8Lz5cbiAgKTtcbn1cbiJdfQ== */\\n/*@ sourceURL=/home/mike/Desktop/learning/nextjs-test/pages/quote.js */\")));\n}","map":{"version":3,"sources":["/home/mike/Desktop/learning/nextjs-test/pages/quote.js"],"names":["useState","useEffect","Layout","Head","axios","Api","list","setList","getUser","response","get","data","console","log","state","setState","fetchPost","d","post","getuser","e","preventDefault","name","email","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,OAAO,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,aAAX,CAAvB;AACAH,MAAAA,OAAO,CAACE,QAAQ,CAACE,IAAV,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACD,KAJD;;AAKAH,IAAAA,OAAO;AACR,GAPQ,EAON,EAPM,CAAT;AASA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBf,QAAQ,EAAlC;;AAEA,QAAMgB,SAAS,GAAG,MAAOC,CAAP,IAAa;AAC7B,UAAMR,QAAQ,GAAG,MAAML,KAAK,CAACc,IAAN,CAAW,kBAAX,EAA+BD,CAA/B,CAAvB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,GAHD;;AAKA,QAAMU,OAAO,GAAIC,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,SAAS,CAACF,KAAD,CAAT;AACD,GAHD;;AAKA,SACE,4BACE,MAAC,IAAD,QACE,8BADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAC;AAAjC,IAFF,CADF,EAKE,MAAC,MAAD,QACE;AAAA,wCAAgB;AAAhB,KACE;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA,KACGR,IAAI,IACH;AAAA;AAAA,KAAKA,IAAI,CAACgB,IAAV,SAAmBhB,IAAI,CAACiB,KAAxB,CAFJ,CAFF,CADF,EAUE;AAAM,IAAA,QAAQ,EAAEJ,OAAhB;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEL,KAFT;AAGE,IAAA,QAAQ,EAAGM,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACI,MAAF,CAASC,KAAV,CAH3B;AAAA;AAAA,IADF,EAME;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA,IANF,CAVF;AAAA;AAAA,smFALF,CADF;AAsCD","sourcesContent":["import { useState, useEffect } from 'react';\nimport Layout from '../components/MyLayout';\nimport Head from 'next/head';\nimport axios from 'axios';\n\nexport default function Api() {\n  const [list, setList] = useState({});\n\n  useEffect(() => {\n    const getUser = async () => {\n      const response = await axios.get(`/api/getApi`);\n      setList(response.data);\n      console.log(response.data);\n    };\n    getUser();\n  }, []);\n\n  const [state, setState] = useState();\n\n  const fetchPost = async (d) => {\n    const response = await axios.post('/api/randomQuote', d);\n    console.log(response);\n  };\n\n  const getuser = (e) => {\n    e.preventDefault();\n    fetchPost(state);\n  };\n\n  return (\n    <>\n      <Head>\n        <title>quotes</title>\n        <meta name=\"description\" content=\"this is a quote route\" />\n      </Head>\n      <Layout>\n        <main className=\"quote\">\n          <h3>User List</h3>\n          <ul>\n            {list && (\n              <li>{list.name} - {list.email}</li>\n            )}\n          </ul>\n        </main>\n\n        <form onSubmit={getuser}>\n          <input\n            type=\"text\"\n            value={state}\n            onChange={(e) => setState(e.target.value)}\n          />\n          <input type=\"submit\" value=\"enviar\" />\n        </form>\n\n        <style jsx>{`\n          main {\n            margin-top: 1rem;\n            margin: 1rem;\n            color: #fff;\n          }\n          li {\n            margin: 1rem;\n          }\n        `}</style>\n      </Layout>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}