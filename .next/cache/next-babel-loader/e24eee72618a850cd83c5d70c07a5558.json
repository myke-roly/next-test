{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/home/mike/Desktop/nextjs-test/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport Layout from '../components/MyLayout';\n\nvar PostLink = function PostLink(_ref) {\n  var id = _ref.id,\n      title = _ref.title;\n  return __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/post/[id]\",\n    as: \"/post/\".concat(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, title)));\n};\n\nexport default function Blog() {\n  var _useState = useState([{\n    id: 'hello-next',\n    title: 'Hello Next.js'\n  }, {\n    id: 'learn-next',\n    title: 'Learn Next.js is awesome'\n  }, {\n    id: 'deploy-next',\n    title: 'Deploy apps with Zeit'\n  }]),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(''),\n      link = _useState2[0],\n      setLink = _useState2[1];\n\n  var addLink = function addLink(e) {\n    e.preventDefault();\n    setState([].concat(_toConsumableArray(state), [{\n      id: link,\n      title: link\n    }]));\n    setLink('');\n  };\n\n  var newRoute = function newRoute() {\n    Router.beforePopState(function (_ref2) {\n      var url = _ref2.url,\n          as = _ref2.as,\n          options = _ref2.options;\n\n      // I only want to allow these two routes!\n      if (as !== '/' && as !== '/other') {\n        // Have SSR render bad routes as a 404.\n        window.location.href = as;\n        return false;\n      }\n\n      return true;\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"tv\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"this is a tv route\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    onClick: newRoute,\n    className: \"jsx-3569580810\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"My Blog\"), __jsx(\"form\", {\n    onSubmit: addLink,\n    className: \"jsx-3569580810\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"value...\",\n    value: link,\n    onChange: function onChange(e) {\n      return setLink(e.target.value);\n    },\n    className: \"jsx-3569580810\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), __jsx(\"ul\", {\n    className: \"jsx-3569580810\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, state.map(function (post) {\n    return __jsx(PostLink, {\n      key: post.id,\n      id: post.id,\n      title: post.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  })), __jsx(_JSXStyle, {\n    id: \"3569580810\",\n    __self: this\n  }, \"h2{font-size:1.2rem;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21pa2UvRGVza3RvcC9uZXh0anMtdGVzdC9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpRTJCLEFBRzhCLGlCQUNRLHlCQUMzQiIsImZpbGUiOiIvaG9tZS9taWtlL0Rlc2t0b3AvbmV4dGpzLXRlc3QvcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnO1xuaW1wb3J0IFJvdXRlciBmcm9tICduZXh0L3JvdXRlcic7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTXlMYXlvdXQnO1xuXG5jb25zdCBQb3N0TGluayA9ICh7IGlkLCB0aXRsZSB9KSA9PiAoXG4gIDxsaT5cbiAgICB7LyogTm8gdGVuZXIgcnV0YXMgY29uIGVsIG1pc21vIHBhcmFtZXRybyB7XCJmb29cIjogXCJhYmNcIiwgXCJmb29cIjogXCI0NTZcIn0gL2FiYz9mb289NDU2ICovfVxuICAgIHsvKiBbLi4ucGFyYW1zXSBAY2FtcHR1cmFtb3MgdG9kb3MgbGFzIHJ1dGFzIC9hL2IvYy9kLi4uICovfVxuICAgIDxMaW5rIGhyZWY9XCIvcG9zdC9baWRdXCIgYXM9e2AvcG9zdC8ke2lkfWB9PlxuICAgICAgPGE+e3RpdGxlfTwvYT5cbiAgICA8L0xpbms+XG4gIDwvbGk+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCbG9nKCkge1xuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZVN0YXRlKFtcbiAgICB7IGlkOiAnaGVsbG8tbmV4dCcsIHRpdGxlOiAnSGVsbG8gTmV4dC5qcycgfSxcbiAgICB7IGlkOiAnbGVhcm4tbmV4dCcsIHRpdGxlOiAnTGVhcm4gTmV4dC5qcyBpcyBhd2Vzb21lJyB9LFxuICAgIHsgaWQ6ICdkZXBsb3ktbmV4dCcsIHRpdGxlOiAnRGVwbG95IGFwcHMgd2l0aCBaZWl0JyB9XG4gIF0pO1xuXG4gIGNvbnN0IFtsaW5rLCBzZXRMaW5rXSA9IHVzZVN0YXRlKCcnKTtcblxuICBjb25zdCBhZGRMaW5rID0gZSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHNldFN0YXRlKFsuLi5zdGF0ZSwgeyBpZDogbGluaywgdGl0bGU6IGxpbmsgfV0pO1xuICAgIHNldExpbmsoJycpO1xuICB9O1xuXG4gIGNvbnN0IG5ld1JvdXRlID0gKCkgPT4ge1xuICAgIFJvdXRlci5iZWZvcmVQb3BTdGF0ZSgoeyB1cmwsIGFzLCBvcHRpb25zIH0pID0+IHtcbiAgICAgIC8vIEkgb25seSB3YW50IHRvIGFsbG93IHRoZXNlIHR3byByb3V0ZXMhXG4gICAgICBpZiAoYXMgIT09ICcvJyAmJiBhcyAhPT0gJy9vdGhlcicpIHtcbiAgICAgICAgLy8gSGF2ZSBTU1IgcmVuZGVyIGJhZCByb3V0ZXMgYXMgYSA0MDQuXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gYXM7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT50djwvdGl0bGU+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCJ0aGlzIGlzIGEgdHYgcm91dGVcIiAvPlxuICAgICAgPC9IZWFkPlxuICAgICAgPExheW91dD5cbiAgICAgICAgPGgyIG9uQ2xpY2s9e25ld1JvdXRlfT5NeSBCbG9nPC9oMj5cbiAgICAgICAgPGZvcm0gb25TdWJtaXQ9e2FkZExpbmt9PlxuICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ2YWx1ZS4uLlwiXG4gICAgICAgICAgICB2YWx1ZT17bGlua31cbiAgICAgICAgICAgIG9uQ2hhbmdlPXtlID0+IHNldExpbmsoZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZm9ybT5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIHtzdGF0ZS5tYXAocG9zdCA9PiAoXG4gICAgICAgICAgICA8UG9zdExpbmsga2V5PXtwb3N0LmlkfSBpZD17cG9zdC5pZH0gdGl0bGU9e3Bvc3QudGl0bGV9IC8+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvdWw+XG4gICAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICAgICAgaDIge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9MYXlvdXQ+XG4gICAgPC8+XG4gICk7XG59XG4iXX0= */\\n/*@ sourceURL=/home/mike/Desktop/nextjs-test/pages/index.js */\")));\n}","map":{"version":3,"sources":["/home/mike/Desktop/nextjs-test/pages/index.js"],"names":["useState","Link","Head","Router","Layout","PostLink","id","title","Blog","state","setState","link","setLink","addLink","e","preventDefault","newRoute","beforePopState","url","as","options","window","location","href","target","value","map","post"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,EAAH,QAAGA,EAAH;AAAA,MAAOC,KAAP,QAAOA,KAAP;AAAA,SACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAwB,IAAA,EAAE,kBAAWD,EAAX,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,KAAJ,CADF,CAHF,CADe;AAAA,CAAjB;;AAUA,eAAe,SAASC,IAAT,GAAgB;AAAA,kBACHR,QAAQ,CAAC,CACjC;AAAEM,IAAAA,EAAE,EAAE,YAAN;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GADiC,EAEjC;AAAED,IAAAA,EAAE,EAAE,YAAN;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAFiC,EAGjC;AAAED,IAAAA,EAAE,EAAE,aAAN;AAAqBC,IAAAA,KAAK,EAAE;AAA5B,GAHiC,CAAD,CADL;AAAA,MACtBE,KADsB;AAAA,MACfC,QADe;;AAAA,mBAOLV,QAAQ,CAAC,EAAD,CAPH;AAAA,MAOtBW,IAPsB;AAAA,MAOhBC,OAPgB;;AAS7B,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,CAAC,EAAI;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,QAAQ,8BAAKD,KAAL,IAAY;AAAEH,MAAAA,EAAE,EAAEK,IAAN;AAAYJ,MAAAA,KAAK,EAAEI;AAAnB,KAAZ,GAAR;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAJD;;AAMA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBb,IAAAA,MAAM,CAACc,cAAP,CAAsB,iBAA0B;AAAA,UAAvBC,GAAuB,SAAvBA,GAAuB;AAAA,UAAlBC,EAAkB,SAAlBA,EAAkB;AAAA,UAAdC,OAAc,SAAdA,OAAc;;AAC9C;AACA,UAAID,EAAE,KAAK,GAAP,IAAcA,EAAE,KAAK,QAAzB,EAAmC;AACjC;AACAE,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBJ,EAAvB;AACA,eAAO,KAAP;AACD;;AAED,aAAO,IAAP;AACD,KATD;AAUD,GAXD;;AAaA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAC,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,OAAO,EAAEH,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAM,IAAA,QAAQ,EAAEH,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,KAAK,EAAEF,IAHT;AAIE,IAAA,QAAQ,EAAE,kBAAAG,CAAC;AAAA,aAAIF,OAAO,CAACE,CAAC,CAACU,MAAF,CAASC,KAAV,CAAX;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KAAK,CAACiB,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACrB,EAApB;AAAwB,MAAA,EAAE,EAAEqB,IAAI,CAACrB,EAAjC;AAAqC,MAAA,KAAK,EAAEqB,IAAI,CAACpB,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAd,CADH,CAVF;AAAA;AAAA;AAAA,olGALF,CADF;AA8BD","sourcesContent":["import { useState } from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport Layout from '../components/MyLayout';\n\nconst PostLink = ({ id, title }) => (\n  <li>\n    {/* No tener rutas con el mismo parametro {\"foo\": \"abc\", \"foo\": \"456\"} /abc?foo=456 */}\n    {/* [...params] @campturamos todos las rutas /a/b/c/d... */}\n    <Link href=\"/post/[id]\" as={`/post/${id}`}>\n      <a>{title}</a>\n    </Link>\n  </li>\n);\n\nexport default function Blog() {\n  const [state, setState] = useState([\n    { id: 'hello-next', title: 'Hello Next.js' },\n    { id: 'learn-next', title: 'Learn Next.js is awesome' },\n    { id: 'deploy-next', title: 'Deploy apps with Zeit' }\n  ]);\n\n  const [link, setLink] = useState('');\n\n  const addLink = e => {\n    e.preventDefault();\n    setState([...state, { id: link, title: link }]);\n    setLink('');\n  };\n\n  const newRoute = () => {\n    Router.beforePopState(({ url, as, options }) => {\n      // I only want to allow these two routes!\n      if (as !== '/' && as !== '/other') {\n        // Have SSR render bad routes as a 404.\n        window.location.href = as;\n        return false;\n      }\n\n      return true;\n    });\n  };\n\n  return (\n    <>\n      <Head>\n        <title>tv</title>\n        <meta name=\"description\" content=\"this is a tv route\" />\n      </Head>\n      <Layout>\n        <h2 onClick={newRoute}>My Blog</h2>\n        <form onSubmit={addLink}>\n          <input\n            type=\"text\"\n            placeholder=\"value...\"\n            value={link}\n            onChange={e => setLink(e.target.value)}\n          />\n        </form>\n        <ul>\n          {state.map(post => (\n            <PostLink key={post.id} id={post.id} title={post.title} />\n          ))}\n        </ul>\n        <style jsx global>{`\n          h2 {\n            font-size: 1.2rem;\n            text-transform: uppercase;\n          }\n        `}</style>\n      </Layout>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}