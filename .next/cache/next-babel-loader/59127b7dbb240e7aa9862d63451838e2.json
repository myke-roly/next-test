{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Layout from '../components/MyLayout';\nimport Head from 'next/head';\nimport axios from 'axios';\nimport fetch from 'isomorphic-unfetch';\n\nfunction Quotes({\n  list\n}) {\n  const {\n    0: loaging,\n    1: setLoading\n  } = useState(true);\n\n  const getUser = () => {\n    if (Object.entries(list).length === 0) {\n      return;\n    }\n\n    setLoading(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"quotes\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"this is a quote route\"\n  })), __jsx(Layout, null, __jsx(\"main\", {\n    className: \"jsx-1035971556\" + \" \" + \"quote\"\n  }, loaging ? __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"jsx-1035971556\"\n  }, \"Loading...\"), __jsx(\"button\", {\n    onClick: getUser,\n    className: \"jsx-1035971556\"\n  }, \"Get data\")) : __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"jsx-1035971556\"\n  }, list.user.name), __jsx(\"p\", {\n    className: \"jsx-1035971556\"\n  }, list.user.email), __jsx(\"button\", {\n    onClick: () => setLoading(true),\n    className: \"jsx-1035971556\"\n  }, \"X\"))), __jsx(_JSXStyle, {\n    id: \"1035971556\"\n  }, \"main.jsx-1035971556{margin-top:1rem;margin:1rem;color:#fff;}button.jsx-1035971556{padding:0.7rem 1rem;border-radius:5px;margin:0.5rem 0;background:black;border:none;color:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21pa2UvRGVza3RvcC9sZWFybmluZy9uZXh0anMtdGVzdC9wYWdlcy9xdW90ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQ29CLEFBRzZCLEFBS0ksZ0JBSlIsSUFLTSxRQUpQLFVBS0ssQ0FKbEIsZUFLbUIsaUJBQ0wsWUFDQSxZQUNkIiwiZmlsZSI6Ii9ob21lL21pa2UvRGVza3RvcC9sZWFybmluZy9uZXh0anMtdGVzdC9wYWdlcy9xdW90ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTXlMYXlvdXQnO1xuaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJztcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcblxuZnVuY3Rpb24gUXVvdGVzKHsgbGlzdCB9KSB7XG4gIGNvbnN0IFtsb2FnaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xuXG4gIGNvbnN0IGdldFVzZXIgPSAoKSA9PiB7XG4gICAgaWYgKE9iamVjdC5lbnRyaWVzKGxpc3QpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgfTtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT5xdW90ZXM8L3RpdGxlPlxuICAgICAgICA8bWV0YSBuYW1lPVwiZGVzY3JpcHRpb25cIiBjb250ZW50PVwidGhpcyBpcyBhIHF1b3RlIHJvdXRlXCIgLz5cbiAgICAgIDwvSGVhZD5cbiAgICAgIDxMYXlvdXQ+XG4gICAgICAgIDxtYWluIGNsYXNzTmFtZT1cInF1b3RlXCI+XG4gICAgICAgICAge2xvYWdpbmcgPyAoXG4gICAgICAgICAgICA8PlxuICAgICAgICAgICAgICA8cD5Mb2FkaW5nLi4uPC9wPlxuICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2dldFVzZXJ9PkdldCBkYXRhPC9idXR0b24+XG4gICAgICAgICAgICA8Lz5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgPHA+e2xpc3QudXNlci5uYW1lfTwvcD5cbiAgICAgICAgICAgICAgPHA+e2xpc3QudXNlci5lbWFpbH08L3A+XG4gICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gc2V0TG9hZGluZyh0cnVlKX0+WDwvYnV0dG9uPlxuICAgICAgICAgICAgPC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9tYWluPlxuXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICBtYWluIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDFyZW07XG4gICAgICAgICAgICBtYXJnaW46IDFyZW07XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnV0dG9uIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAuN3JlbSAxcmVtO1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgICAgICAgbWFyZ2luOiAwLjVyZW0gMDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrO1xuICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9MYXlvdXQ+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTZXJ2ZXJTaWRlUHJvcHMoKSB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2gocHJvY2Vzcy5lbnYuVVJMICsgYC9hcGkvZ2V0QXBpYCk7XG4gIGNvbnN0IGxpc3QgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgcmV0dXJuIHsgcHJvcHM6IHsgbGlzdCB9IH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IFF1b3RlcztcbiJdfQ== */\\n/*@ sourceURL=/home/mike/Desktop/learning/nextjs-test/pages/quote.js */\")));\n}\n\nexport async function getServerSideProps() {\n  const response = await fetch(process.env.URL + `/api/getApi`);\n  const list = await response.json();\n  return {\n    props: {\n      list\n    }\n  };\n}\nexport default Quotes;","map":{"version":3,"sources":["/home/mike/Desktop/learning/nextjs-test/pages/quote.js"],"names":["useState","useEffect","Layout","Head","axios","fetch","Quotes","list","loaging","setLoading","getUser","Object","entries","length","user","name","email","getServerSideProps","response","process","env","URL","json","props"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA0B;AACxB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMU,OAAO,GAAG,MAAM;AACpB,QAAIC,MAAM,CAACC,OAAP,CAAeL,IAAf,EAAqBM,MAArB,KAAgC,CAApC,EAAuC;AACrC;AACD;;AACDJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GALD;;AAMA,SACE,4BACE,MAAC,IAAD,QACE,8BADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAC;AAAjC,IAFF,CADF,EAKE,MAAC,MAAD,QACE;AAAA,wCAAgB;AAAhB,KACGD,OAAO,GACN,4BACE;AAAA;AAAA,kBADF,EAEE;AAAQ,IAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA,gBAFF,CADM,GAMN,4BACE;AAAA;AAAA,KAAIH,IAAI,CAACO,IAAL,CAAUC,IAAd,CADF,EAEE;AAAA;AAAA,KAAIR,IAAI,CAACO,IAAL,CAAUE,KAAd,CAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMP,UAAU,CAAC,IAAD,CAAjC;AAAA;AAAA,SAHF,CAPJ,CADF;AAAA;AAAA,qwFALF,CADF;AAwCD;;AAED,OAAO,eAAeQ,kBAAf,GAAoC;AACzC,QAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,OAAO,CAACC,GAAR,CAAYC,GAAZ,GAAmB,aAApB,CAA5B;AACA,QAAMd,IAAI,GAAG,MAAMW,QAAQ,CAACI,IAAT,EAAnB;AAEA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAEhB,MAAAA;AAAF;AAAT,GAAP;AACD;AAED,eAAeD,MAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport Layout from '../components/MyLayout';\nimport Head from 'next/head';\nimport axios from 'axios';\nimport fetch from 'isomorphic-unfetch';\n\nfunction Quotes({ list }) {\n  const [loaging, setLoading] = useState(true);\n\n  const getUser = () => {\n    if (Object.entries(list).length === 0) {\n      return;\n    }\n    setLoading(false);\n  };\n  return (\n    <>\n      <Head>\n        <title>quotes</title>\n        <meta name=\"description\" content=\"this is a quote route\" />\n      </Head>\n      <Layout>\n        <main className=\"quote\">\n          {loaging ? (\n            <>\n              <p>Loading...</p>\n              <button onClick={getUser}>Get data</button>\n            </>\n          ) : (\n            <>\n              <p>{list.user.name}</p>\n              <p>{list.user.email}</p>\n              <button onClick={() => setLoading(true)}>X</button>\n            </>\n          )}\n        </main>\n\n        <style jsx>{`\n          main {\n            margin-top: 1rem;\n            margin: 1rem;\n            color: #fff;\n          }\n          button {\n            padding: 0.7rem 1rem;\n            border-radius: 5px;\n            margin: 0.5rem 0;\n            background: black;\n            border: none;\n            color: white;\n          }\n        `}</style>\n      </Layout>\n    </>\n  );\n}\n\nexport async function getServerSideProps() {\n  const response = await fetch(process.env.URL + `/api/getApi`);\n  const list = await response.json();\n\n  return { props: { list } };\n}\n\nexport default Quotes;\n"]},"metadata":{},"sourceType":"module"}