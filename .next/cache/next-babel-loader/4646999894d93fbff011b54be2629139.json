{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/mike/Desktop/learning/nextjs-test/pages/quote.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport Layout from '../components/MyLayout';\nimport Head from 'next/head';\nimport axios from 'axios';\nimport { useState } from 'react';\n/** consumimos datos desde nuestra api/randomQuote */\n\nfunction fetcher(url) {\n  return fetch(url).then(function (res) {\n    return res.json();\n  });\n}\n\nexport default function Api() {\n  var newUser = function newUser() {\n    var response;\n    return _regeneratorRuntime.async(function newUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"/api/randomQuote\"));\n\n          case 2:\n            response = _context.sent;\n            console.log(response);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var _useState = useState({\n    name: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var fetchPost = function fetchPost(d) {\n    var response;\n    return _regeneratorRuntime.async(function fetchPost$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.post('/api/randomQuote', d));\n\n          case 2:\n            response = _context2.sent;\n            console.log(response);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var getuser = function getuser(e) {\n    e.preventDefault();\n    fetchPost(state);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"quotes\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"this is a quote route\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"main\", {\n    className: \"jsx-3025287635\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-3025287635\" + \" \" + \"quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: newUser,\n    className: \"jsx-3025287635\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"new User\"))), __jsx(\"form\", {\n    onSubmit: getuser,\n    className: \"jsx-3025287635\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: state.name,\n    onChange: function onChange(e) {\n      return setState({\n        name: e.target.value\n      });\n    },\n    className: \"jsx-3025287635\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"enviar\",\n    className: \"jsx-3025287635\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"3025287635\",\n    __self: this\n  }, \"main.jsx-3025287635{margin-top:1rem;padding:1rem;border:2px solid green;color:#fff;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21pa2UvRGVza3RvcC9sZWFybmluZy9uZXh0anMtdGVzdC9wYWdlcy9xdW90ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrRGtCLEFBRzJCLGdCQUNILGFBQ1UsdUJBQ1osV0FDYiIsImZpbGUiOiIvaG9tZS9taWtlL0Rlc2t0b3AvbGVhcm5pbmcvbmV4dGpzLXRlc3QvcGFnZXMvcXVvdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3VzZVJvdXRlcn0gZnJvbSAnbmV4dC9yb3V0ZXInO1xuaW1wb3J0IHVzZVNXUiBmcm9tICdzd3InO1xuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCc7XG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbi8qKiBjb25zdW1pbW9zIGRhdG9zIGRlc2RlIG51ZXN0cmEgYXBpL3JhbmRvbVF1b3RlICovXG5mdW5jdGlvbiBmZXRjaGVyKHVybCkge1xuICByZXR1cm4gZmV0Y2godXJsKS50aGVuKHJlcyA9PiByZXMuanNvbigpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBpKCkge1xuICBjb25zdCBuZXdVc2VyID0gYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KGAvYXBpL3JhbmRvbVF1b3RlYCk7XG4gICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICB9XG5cbiAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZSh7XG4gICAgbmFtZTogJydcbiAgfSlcblxuICBjb25zdCBmZXRjaFBvc3QgPSBhc3luYyAoZCkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdCgnL2FwaS9yYW5kb21RdW90ZScsIGQpO1xuICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgfSBcblxuICBjb25zdCBnZXR1c2VyID0gKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZmV0Y2hQb3N0KHN0YXRlKVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgIDxIZWFkPlxuICAgICAgPHRpdGxlPnF1b3RlczwvdGl0bGU+XG4gICAgICA8bWV0YSBuYW1lPVwiZGVzY3JpcHRpb25cIiBjb250ZW50PVwidGhpcyBpcyBhIHF1b3RlIHJvdXRlXCIgLz5cbiAgICA8L0hlYWQ+XG4gICAgPExheW91dD5cbiAgICAgIDxtYWluPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicXVvdGVcIj5cbiAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17bmV3VXNlcn0+bmV3IFVzZXI8L2J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgIDwvbWFpbj5cblxuICAgICAgPGZvcm0gb25TdWJtaXQ9e2dldHVzZXJ9PlxuICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiB2YWx1ZT17c3RhdGUubmFtZX0gb25DaGFuZ2U9eyhlKSA9PiBzZXRTdGF0ZSh7bmFtZTogZS50YXJnZXQudmFsdWV9KX0gLz5cbiAgICAgICAgPGlucHV0IHR5cGU9XCJzdWJtaXRcIiB2YWx1ZT1cImVudmlhclwiIC8+XG4gICAgICA8L2Zvcm0+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgbWFpbiB7XG4gICAgICAgICAgbWFyZ2luLXRvcDogMXJlbTtcbiAgICAgICAgICBwYWRkaW5nOiAxcmVtO1xuICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyZWVuO1xuICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gICAgPC8+XG4gIClcbn0gIl19 */\\n/*@ sourceURL=/home/mike/Desktop/learning/nextjs-test/pages/quote.js */\")));\n}","map":{"version":3,"sources":["/home/mike/Desktop/learning/nextjs-test/pages/quote.js"],"names":["useRouter","useSWR","Layout","Head","axios","useState","fetcher","url","fetch","then","res","json","Api","newUser","get","response","console","log","name","state","setState","fetchPost","d","post","getuser","e","preventDefault","target","value"],"mappings":";;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA;;AACA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAAnB,CAAP;AACD;;AAED,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACST,KAAK,CAACU,GAAN,oBADT;;AAAA;AACRC,YAAAA,QADQ;AAEdC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAD4B,kBAMFV,QAAQ,CAAC;AACjCa,IAAAA,IAAI,EAAE;AAD2B,GAAD,CANN;AAAA,MAMrBC,KANqB;AAAA,MAMdC,QANc;;AAU5B,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOlB,KAAK,CAACmB,IAAN,CAAW,kBAAX,EAA+BD,CAA/B,CADP;;AAAA;AACVP,YAAAA,QADU;AAEhBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAKA,MAAMS,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,SAAS,CAACF,KAAD,CAAT;AACD,GAHD;;AAKA,SACE,4BACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAC,uBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA,EAKA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADJ,CADF,EAOE;AAAM,IAAA,QAAQ,EAAEW,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEL,KAAK,CAACD,IAAhC;AAAsC,IAAA,QAAQ,EAAE,kBAACO,CAAD;AAAA,aAAOL,QAAQ,CAAC;AAACF,QAAAA,IAAI,EAAEO,CAAC,CAACE,MAAF,CAASC;AAAhB,OAAD,CAAf;AAAA,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAPF;AAAA;AAAA;AAAA,u+EALA,CADF;AA6BD","sourcesContent":["import {useRouter} from 'next/router';\nimport useSWR from 'swr';\nimport Layout from '../components/MyLayout';\nimport Head from 'next/head';\nimport axios from 'axios';\nimport { useState } from 'react';\n\n/** consumimos datos desde nuestra api/randomQuote */\nfunction fetcher(url) {\n  return fetch(url).then(res => res.json());\n}\n\nexport default function Api() {\n  const newUser = async () => {\n    const response = await axios.get(`/api/randomQuote`);\n    console.log(response);\n  }\n\n  const [state, setState] = useState({\n    name: ''\n  })\n\n  const fetchPost = async (d) => {\n    const response = await axios.post('/api/randomQuote', d);\n    console.log(response);\n  } \n\n  const getuser = (e) => {\n    e.preventDefault();\n    fetchPost(state)\n  }\n\n  return (\n    <>\n    <Head>\n      <title>quotes</title>\n      <meta name=\"description\" content=\"this is a quote route\" />\n    </Head>\n    <Layout>\n      <main>\n          <div className=\"quote\">\n            <button onClick={newUser}>new User</button>\n          </div>\n      </main>\n\n      <form onSubmit={getuser}>\n        <input type=\"text\" value={state.name} onChange={(e) => setState({name: e.target.value})} />\n        <input type=\"submit\" value=\"enviar\" />\n      </form>\n\n      <style jsx>{`\n        main {\n          margin-top: 1rem;\n          padding: 1rem;\n          border: 2px solid green;\n          color: #fff;\n        }\n      `}</style>\n    </Layout>\n    </>\n  )\n} "]},"metadata":{},"sourceType":"module"}