{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/mike/Desktop/projects/nextjs-test/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Post = function Post(_ref) {\n  var show = _ref.show;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, show.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, show.summary.replace(/<[/]?[pg]>/g, '')), show.image ? __jsx(\"img\", {\n    src: show.image.medium,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }) : null);\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, show;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(Post.getInitialProps);\n          console.log(context);\n          id = context.query.id;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 5:\n          res = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 8:\n          show = _context.sent;\n          return _context.abrupt(\"return\", {\n            show: show\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}; // export default Post;","map":{"version":3,"sources":["/home/mike/Desktop/projects/nextjs-test/pages/p/[id].js"],"names":["Layout","fetch","Post","show","name","summary","replace","image","medium","getInitialProps","context","console","log","id","query","res","json"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACzB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,OAAL,CAAaC,OAAb,CAAqB,aAArB,EAAoC,EAApC,CAAJ,CAFF,EAGGH,IAAI,CAACI,KAAL,GAAa;AAAK,IAAA,GAAG,EAAEJ,IAAI,CAACI,KAAL,CAAWC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb,GAA+C,IAHlD,CADF;AAOD,CARD;;AAWAN,IAAI,CAACO,eAAL,GAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAErBC,UAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACO,eAAjB;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACQG,UAAAA,EAJa,GAINH,OAAO,CAACI,KAJF,CAIbD,EAJa;AAAA;AAAA,2CAKHZ,KAAK,wCAAiCY,EAAjC,EALF;;AAAA;AAKfE,UAAAA,GALe;AAAA;AAAA,2CAMFA,GAAG,CAACC,IAAJ,EANE;;AAAA;AAMfb,UAAAA,IANe;AAAA,2CAQd;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,C,CAWA","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = ({ show }) => {\n  return (\n    <Layout>\n      <h2>{show.name}</h2>\n      <p>{show.summary.replace(/<[/]?[pg]>/g, '')}</p>\n      {show.image ? <img src={show.image.medium} /> : null}\n    </Layout>\n  );\n};\n\n\nPost.getInitialProps = async (context) => {\n\n  console.log(Post.getInitialProps);\n  console.log(context);\n  const { id } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n\n  return { show };\n}\n\n// export default Post;\n"]},"metadata":{},"sourceType":"module"}