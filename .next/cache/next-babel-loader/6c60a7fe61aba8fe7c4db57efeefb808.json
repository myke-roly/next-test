{"ast":null,"code":"var _jsxFileName = \"/home/mike/Desktop/nextjs-test/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport Layout from '../components/MyLayout';\n\nconst PostLink = ({\n  id,\n  title\n}) => __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/post/[id]\",\n  as: `/post/${id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, title)));\n\nexport default function () {\n  const {\n    0: state,\n    1: setState\n  } = useState([{\n    id: 'hello-next',\n    title: 'Hello Next.js'\n  }, {\n    id: 'learn-next',\n    title: 'Learn Next.js is awesome'\n  }, {\n    id: 'deploy-next',\n    title: 'Deploy apps with Zeit'\n  }]);\n  const {\n    0: link,\n    1: setLink\n  } = useState('');\n\n  const addLink = e => {\n    e.preventDefault();\n    setState([...state, {\n      id: link,\n      title: link\n    }]);\n    setLink('');\n  };\n\n  const newRoute = () => {\n    Router.beforePopState(({\n      url,\n      as,\n      options\n    }) => {\n      // I only want to allow these two routes!\n      if (as !== '/' && as !== '/other') {\n        // Have SSR render bad routes as a 404.\n        window.location.href = as;\n        return false;\n      }\n\n      return true;\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"home\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"this is the main page...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    onClick: newRoute,\n    className: \"jsx-3569580810\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"My Blog\"), __jsx(\"form\", {\n    onSubmit: addLink,\n    className: \"jsx-3569580810\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"value...\",\n    value: link,\n    onChange: e => setLink(e.target.value),\n    className: \"jsx-3569580810\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), __jsx(\"ul\", {\n    className: \"jsx-3569580810\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, state.map(post => __jsx(PostLink, {\n    key: post.id,\n    id: post.id,\n    title: post.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))), __jsx(_JSXStyle, {\n    id: \"3569580810\",\n    __self: this\n  }, \"h2{font-size:1.2rem;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21pa2UvRGVza3RvcC9uZXh0anMtdGVzdC9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpRTJCLEFBRzhCLGlCQUNRLHlCQUMzQiIsImZpbGUiOiIvaG9tZS9taWtlL0Rlc2t0b3AvbmV4dGpzLXRlc3QvcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnO1xuaW1wb3J0IFJvdXRlciBmcm9tICduZXh0L3JvdXRlcic7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTXlMYXlvdXQnO1xuXG5jb25zdCBQb3N0TGluayA9ICh7IGlkLCB0aXRsZSB9KSA9PiAoXG4gIDxsaT5cbiAgICB7LyogTm8gdGVuZXIgcnV0YXMgY29uIGVsIG1pc21vIHBhcmFtZXRybyB7XCJmb29cIjogXCJhYmNcIiwgXCJmb29cIjogXCI0NTZcIn0gL2FiYz9mb289NDU2ICovfVxuICAgIHsvKiBbLi4ucGFyYW1zXSBAY2FtcHR1cmFtb3MgdG9kb3MgbGFzIHJ1dGFzIC9hL2IvYy9kLi4uICovfVxuICAgIDxMaW5rIGhyZWY9XCIvcG9zdC9baWRdXCIgYXM9e2AvcG9zdC8ke2lkfWB9PlxuICAgICAgPGE+e3RpdGxlfTwvYT5cbiAgICA8L0xpbms+XG4gIDwvbGk+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZShbXG4gICAgeyBpZDogJ2hlbGxvLW5leHQnLCB0aXRsZTogJ0hlbGxvIE5leHQuanMnIH0sXG4gICAgeyBpZDogJ2xlYXJuLW5leHQnLCB0aXRsZTogJ0xlYXJuIE5leHQuanMgaXMgYXdlc29tZScgfSxcbiAgICB7IGlkOiAnZGVwbG95LW5leHQnLCB0aXRsZTogJ0RlcGxveSBhcHBzIHdpdGggWmVpdCcgfVxuICBdKTtcblxuICBjb25zdCBbbGluaywgc2V0TGlua10gPSB1c2VTdGF0ZSgnJyk7XG5cbiAgY29uc3QgYWRkTGluayA9IGUgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBzZXRTdGF0ZShbLi4uc3RhdGUsIHsgaWQ6IGxpbmssIHRpdGxlOiBsaW5rIH1dKTtcbiAgICBzZXRMaW5rKCcnKTtcbiAgfTtcblxuICBjb25zdCBuZXdSb3V0ZSA9ICgpID0+IHtcbiAgICBSb3V0ZXIuYmVmb3JlUG9wU3RhdGUoKHsgdXJsLCBhcywgb3B0aW9ucyB9KSA9PiB7XG4gICAgICAvLyBJIG9ubHkgd2FudCB0byBhbGxvdyB0aGVzZSB0d28gcm91dGVzIVxuICAgICAgaWYgKGFzICE9PSAnLycgJiYgYXMgIT09ICcvb3RoZXInKSB7XG4gICAgICAgIC8vIEhhdmUgU1NSIHJlbmRlciBiYWQgcm91dGVzIGFzIGEgNDA0LlxuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGFzO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8dGl0bGU+aG9tZTwvdGl0bGU+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCJ0aGlzIGlzIHRoZSBtYWluIHBhZ2UuLi5cIiAvPlxuICAgICAgPC9IZWFkPlxuICAgICAgPExheW91dD5cbiAgICAgICAgPGgyIG9uQ2xpY2s9e25ld1JvdXRlfT5NeSBCbG9nPC9oMj5cbiAgICAgICAgPGZvcm0gb25TdWJtaXQ9e2FkZExpbmt9PlxuICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ2YWx1ZS4uLlwiXG4gICAgICAgICAgICB2YWx1ZT17bGlua31cbiAgICAgICAgICAgIG9uQ2hhbmdlPXtlID0+IHNldExpbmsoZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZm9ybT5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIHtzdGF0ZS5tYXAocG9zdCA9PiAoXG4gICAgICAgICAgICA8UG9zdExpbmsga2V5PXtwb3N0LmlkfSBpZD17cG9zdC5pZH0gdGl0bGU9e3Bvc3QudGl0bGV9IC8+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvdWw+XG4gICAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICAgICAgaDIge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9MYXlvdXQ+XG4gICAgPC8+XG4gICk7XG59XG4iXX0= */\\n/*@ sourceURL=/home/mike/Desktop/nextjs-test/pages/index.js */\")));\n}","map":{"version":3,"sources":["/home/mike/Desktop/nextjs-test/pages/index.js"],"names":["useState","Link","Head","Router","Layout","PostLink","id","title","state","setState","link","setLink","addLink","e","preventDefault","newRoute","beforePopState","url","as","options","window","location","href","target","value","map","post"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport Layout from '../components/MyLayout';\n\nconst PostLink = ({ id, title }) => (\n  <li>\n    {/* No tener rutas con el mismo parametro {\"foo\": \"abc\", \"foo\": \"456\"} /abc?foo=456 */}\n    {/* [...params] @campturamos todos las rutas /a/b/c/d... */}\n    <Link href=\"/post/[id]\" as={`/post/${id}`}>\n      <a>{title}</a>\n    </Link>\n  </li>\n);\n\nexport default function() {\n  const [state, setState] = useState([\n    { id: 'hello-next', title: 'Hello Next.js' },\n    { id: 'learn-next', title: 'Learn Next.js is awesome' },\n    { id: 'deploy-next', title: 'Deploy apps with Zeit' }\n  ]);\n\n  const [link, setLink] = useState('');\n\n  const addLink = e => {\n    e.preventDefault();\n    setState([...state, { id: link, title: link }]);\n    setLink('');\n  };\n\n  const newRoute = () => {\n    Router.beforePopState(({ url, as, options }) => {\n      // I only want to allow these two routes!\n      if (as !== '/' && as !== '/other') {\n        // Have SSR render bad routes as a 404.\n        window.location.href = as;\n        return false;\n      }\n\n      return true;\n    });\n  };\n\n  return (\n    <>\n      <Head>\n        <title>home</title>\n        <meta name=\"description\" content=\"this is the main page...\" />\n      </Head>\n      <Layout>\n        <h2 onClick={newRoute}>My Blog</h2>\n        <form onSubmit={addLink}>\n          <input\n            type=\"text\"\n            placeholder=\"value...\"\n            value={link}\n            onChange={e => setLink(e.target.value)}\n          />\n        </form>\n        <ul>\n          {state.map(post => (\n            <PostLink key={post.id} id={post.id} title={post.title} />\n          ))}\n        </ul>\n        <style jsx global>{`\n          h2 {\n            font-size: 1.2rem;\n            text-transform: uppercase;\n          }\n        `}</style>\n      </Layout>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}