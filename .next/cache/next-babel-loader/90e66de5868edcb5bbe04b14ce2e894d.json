{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/mike/Desktop/learning/nextjs-test/pages/quote.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport Layout from '../components/MyLayout';\nimport Head from 'next/head';\nimport axios from 'axios';\nimport { useState } from 'react';\n/** consumimos datos desde nuestra api/randomQuote */\n\nfunction fetcher(url) {\n  return fetch(url).then(function (res) {\n    return res.json();\n  });\n}\n\nexport default function Api() {\n  // const { query } = useRouter();\n  // const { data, error } = useSWR(`/api/randomQuote${query.author ? '?author=' + query.author : ''}` ,fetcher);\n  // const author = data && data.author; // data?.author\n  // let quote = data && data.quote; // data?.quote\n  // if(!data) return 'Loading...';\n  // if(error) return 'Failed to fetch the quote';\n  var _useState = useState({\n    name: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var fetchPost = function fetchPost(d) {\n    var response;\n    return _regeneratorRuntime.async(function fetchPost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.post('/api/randomQuote', d));\n\n          case 2:\n            response = _context.sent;\n            console.log(response);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var getuser = function getuser(e) {\n    e.preventDefault();\n    fetchPost(state);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"quotes\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"this is a quote route\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"main\", {\n    className: \"jsx-3025287635\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-3025287635\" + \" \" + \"quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), __jsx(\"form\", {\n    onSubmit: getuser,\n    className: \"jsx-3025287635\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: state.name,\n    onChange: function onChange(e) {\n      return setState({\n        name: e.target.value\n      });\n    },\n    className: \"jsx-3025287635\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"enviar\",\n    className: \"jsx-3025287635\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"3025287635\",\n    __self: this\n  }, \"main.jsx-3025287635{margin-top:1rem;padding:1rem;border:2px solid green;color:#fff;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21pa2UvRGVza3RvcC9sZWFybmluZy9uZXh0anMtdGVzdC9wYWdlcy9xdW90ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RGtCLEFBRzJCLGdCQUNILGFBQ1UsdUJBQ1osV0FDYiIsImZpbGUiOiIvaG9tZS9taWtlL0Rlc2t0b3AvbGVhcm5pbmcvbmV4dGpzLXRlc3QvcGFnZXMvcXVvdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3VzZVJvdXRlcn0gZnJvbSAnbmV4dC9yb3V0ZXInO1xuaW1wb3J0IHVzZVNXUiBmcm9tICdzd3InO1xuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCc7XG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbi8qKiBjb25zdW1pbW9zIGRhdG9zIGRlc2RlIG51ZXN0cmEgYXBpL3JhbmRvbVF1b3RlICovXG5mdW5jdGlvbiBmZXRjaGVyKHVybCkge1xuICByZXR1cm4gZmV0Y2godXJsKS50aGVuKHJlcyA9PiByZXMuanNvbigpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBpKCkge1xuICAvLyBjb25zdCB7IHF1ZXJ5IH0gPSB1c2VSb3V0ZXIoKTtcblxuICAvLyBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSB1c2VTV1IoYC9hcGkvcmFuZG9tUXVvdGUke3F1ZXJ5LmF1dGhvciA/ICc/YXV0aG9yPScgKyBxdWVyeS5hdXRob3IgOiAnJ31gICxmZXRjaGVyKTtcblxuICAvLyBjb25zdCBhdXRob3IgPSBkYXRhICYmIGRhdGEuYXV0aG9yOyAvLyBkYXRhPy5hdXRob3JcbiAgLy8gbGV0IHF1b3RlID0gZGF0YSAmJiBkYXRhLnF1b3RlOyAvLyBkYXRhPy5xdW90ZVxuXG4gIC8vIGlmKCFkYXRhKSByZXR1cm4gJ0xvYWRpbmcuLi4nO1xuICAvLyBpZihlcnJvcikgcmV0dXJuICdGYWlsZWQgdG8gZmV0Y2ggdGhlIHF1b3RlJztcblxuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZVN0YXRlKHtcbiAgICBuYW1lOiAnJ1xuICB9KVxuXG4gIGNvbnN0IGZldGNoUG9zdCA9IGFzeW5jIChkKSA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KCcvYXBpL3JhbmRvbVF1b3RlJywgZCk7XG4gICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICB9IFxuXG4gIGNvbnN0IGdldHVzZXIgPSAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBmZXRjaFBvc3Qoc3RhdGUpXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgPEhlYWQ+XG4gICAgICA8dGl0bGU+cXVvdGVzPC90aXRsZT5cbiAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCJ0aGlzIGlzIGEgcXVvdGUgcm91dGVcIiAvPlxuICAgIDwvSGVhZD5cbiAgICA8TGF5b3V0PlxuICAgICAgPG1haW4+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJxdW90ZVwiPlxuICAgICAgICAgICAgey8qIHtxdW90ZX0gKi99XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7Lyoge2F1dGhvciAmJiA8aT4tIHthdXRob3J9PC9pPn0gKi99XG4gICAgICA8L21haW4+XG5cbiAgICAgIDxmb3JtIG9uU3VibWl0PXtnZXR1c2VyfT5cbiAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgdmFsdWU9e3N0YXRlLm5hbWV9IG9uQ2hhbmdlPXsoZSkgPT4gc2V0U3RhdGUoe25hbWU6IGUudGFyZ2V0LnZhbHVlfSl9IC8+XG4gICAgICAgIDxpbnB1dCB0eXBlPVwic3VibWl0XCIgdmFsdWU9XCJlbnZpYXJcIiAvPlxuICAgICAgPC9mb3JtPlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIG1haW4ge1xuICAgICAgICAgIG1hcmdpbi10b3A6IDFyZW07XG4gICAgICAgICAgcGFkZGluZzogMXJlbTtcbiAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCBncmVlbjtcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvTGF5b3V0PlxuICAgIDwvPlxuICApXG59ICJdfQ== */\\n/*@ sourceURL=/home/mike/Desktop/learning/nextjs-test/pages/quote.js */\")));\n}","map":{"version":3,"sources":["/home/mike/Desktop/learning/nextjs-test/pages/quote.js"],"names":["useRouter","useSWR","Layout","Head","axios","useState","fetcher","url","fetch","then","res","json","Api","name","state","setState","fetchPost","d","post","response","console","log","getuser","e","preventDefault","target","value"],"mappings":";;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA;;AACA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAAnB,CAAP;AACD;;AAED,eAAe,SAASC,GAAT,GAAe;AAC5B;AAEA;AAEA;AACA;AAEA;AACA;AAT4B,kBAWFP,QAAQ,CAAC;AACjCQ,IAAAA,IAAI,EAAE;AAD2B,GAAD,CAXN;AAAA,MAWrBC,KAXqB;AAAA,MAWdC,QAXc;;AAe5B,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOb,KAAK,CAACc,IAAN,CAAW,kBAAX,EAA+BD,CAA/B,CADP;;AAAA;AACVE,YAAAA,QADU;AAEhBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAKA,MAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,SAAS,CAACF,KAAD,CAAT;AACD,GAHD;;AAKA,SACE,4BACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAC,uBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA,EAKA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF,EAQE;AAAM,IAAA,QAAQ,EAAEQ,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAER,KAAK,CAACD,IAAhC;AAAsC,IAAA,QAAQ,EAAE,kBAACU,CAAD;AAAA,aAAOR,QAAQ,CAAC;AAACF,QAAAA,IAAI,EAAEU,CAAC,CAACE,MAAF,CAASC;AAAhB,OAAD,CAAf;AAAA,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF;AAAA;AAAA;AAAA,+zFALA,CADF;AA8BD","sourcesContent":["import {useRouter} from 'next/router';\nimport useSWR from 'swr';\nimport Layout from '../components/MyLayout';\nimport Head from 'next/head';\nimport axios from 'axios';\nimport { useState } from 'react';\n\n/** consumimos datos desde nuestra api/randomQuote */\nfunction fetcher(url) {\n  return fetch(url).then(res => res.json());\n}\n\nexport default function Api() {\n  // const { query } = useRouter();\n\n  // const { data, error } = useSWR(`/api/randomQuote${query.author ? '?author=' + query.author : ''}` ,fetcher);\n\n  // const author = data && data.author; // data?.author\n  // let quote = data && data.quote; // data?.quote\n\n  // if(!data) return 'Loading...';\n  // if(error) return 'Failed to fetch the quote';\n\n  const [state, setState] = useState({\n    name: ''\n  })\n\n  const fetchPost = async (d) => {\n    const response = await axios.post('/api/randomQuote', d);\n    console.log(response);\n  } \n\n  const getuser = (e) => {\n    e.preventDefault();\n    fetchPost(state)\n  }\n\n  return (\n    <>\n    <Head>\n      <title>quotes</title>\n      <meta name=\"description\" content=\"this is a quote route\" />\n    </Head>\n    <Layout>\n      <main>\n          <div className=\"quote\">\n            {/* {quote} */}\n          </div>\n            {/* {author && <i>- {author}</i>} */}\n      </main>\n\n      <form onSubmit={getuser}>\n        <input type=\"text\" value={state.name} onChange={(e) => setState({name: e.target.value})} />\n        <input type=\"submit\" value=\"enviar\" />\n      </form>\n\n      <style jsx>{`\n        main {\n          margin-top: 1rem;\n          padding: 1rem;\n          border: 2px solid green;\n          color: #fff;\n        }\n      `}</style>\n    </Layout>\n    </>\n  )\n} "]},"metadata":{},"sourceType":"module"}