{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mike/Desktop/learning/nextjs-test/pages/index.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport Layout from '../components/MyLayout';\n\nvar PostLink = function PostLink(_ref) {\n  var id = _ref.id,\n      title = _ref.title;\n  return __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }\n  }, __jsx(Link, {\n    href: \"/post/[id]\",\n    as: \"/post/\".concat(id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, title)));\n};\n\nexport default (function () {\n  var _useState = useState([{\n    id: 'hello-next',\n    title: 'Hello Next.js'\n  }, {\n    id: 'learn-next',\n    title: 'Learn Next.js is awesome'\n  }, {\n    id: 'deploy-next',\n    title: 'Deploy apps with Zeit'\n  }]),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(''),\n      link = _useState2[0],\n      setLink = _useState2[1];\n\n  var addLink = function addLink(e) {\n    e.preventDefault();\n    setState([].concat(_toConsumableArray(state), [{\n      id: link,\n      title: link\n    }]));\n    setLink('');\n  };\n\n  var newRoute = function newRoute() {\n    Router.beforePopState(function (_ref2) {\n      var url = _ref2.url,\n          as = _ref2.as,\n          options = _ref2.options;\n\n      // I only want to allow these two routes!\n      if (as !== '/' && as !== '/other') {\n        // Have SSR render bad routes as a 404.\n        window.location.href = as;\n        return false;\n      }\n\n      return true;\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"home\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"this is the main page...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    onClick: newRoute,\n    className: \"jsx-3569580810\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"My Blog\"), __jsx(\"form\", {\n    onSubmit: addLink,\n    className: \"jsx-3569580810\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"value...\",\n    value: link,\n    onChange: function onChange(e) {\n      return setLink(e.target.value);\n    },\n    className: \"jsx-3569580810\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), __jsx(\"ul\", {\n    className: \"jsx-3569580810\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, state.map(function (post) {\n    return __jsx(PostLink, {\n      key: post.id,\n      id: post.id,\n      title: post.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    });\n  })), __jsx(_JSXStyle, {\n    id: \"3569580810\",\n    __self: _this\n  }, \"h2{font-size:1.2rem;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21pa2UvRGVza3RvcC9sZWFybmluZy9uZXh0anMtdGVzdC9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpRTJCLEFBRzhCLGlCQUNRLHlCQUMzQiIsImZpbGUiOiIvaG9tZS9taWtlL0Rlc2t0b3AvbGVhcm5pbmcvbmV4dGpzLXRlc3QvcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnO1xuaW1wb3J0IFJvdXRlciBmcm9tICduZXh0L3JvdXRlcic7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTXlMYXlvdXQnO1xuXG5jb25zdCBQb3N0TGluayA9ICh7IGlkLCB0aXRsZSB9KSA9PiAoXG4gIDxsaT5cbiAgICB7LyogTm8gdGVuZXIgcnV0YXMgY29uIGVsIG1pc21vIHBhcmFtZXRybyB7XCJmb29cIjogXCJhYmNcIiwgXCJmb29cIjogXCI0NTZcIn0gL2FiYz9mb289NDU2ICovfVxuICAgIHsvKiBbLi4ucGFyYW1zXSBAY2FtcHR1cmFtb3MgdG9kb3MgbGFzIHJ1dGFzIC9hL2IvYy9kLi4uICovfVxuICAgIDxMaW5rIGhyZWY9XCIvcG9zdC9baWRdXCIgYXM9e2AvcG9zdC8ke2lkfWB9PlxuICAgICAgPGE+e3RpdGxlfTwvYT5cbiAgICA8L0xpbms+XG4gIDwvbGk+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoW1xuICAgIHsgaWQ6ICdoZWxsby1uZXh0JywgdGl0bGU6ICdIZWxsbyBOZXh0LmpzJyB9LFxuICAgIHsgaWQ6ICdsZWFybi1uZXh0JywgdGl0bGU6ICdMZWFybiBOZXh0LmpzIGlzIGF3ZXNvbWUnIH0sXG4gICAgeyBpZDogJ2RlcGxveS1uZXh0JywgdGl0bGU6ICdEZXBsb3kgYXBwcyB3aXRoIFplaXQnIH1cbiAgXSk7XG5cbiAgY29uc3QgW2xpbmssIHNldExpbmtdID0gdXNlU3RhdGUoJycpO1xuXG4gIGNvbnN0IGFkZExpbmsgPSBlID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgc2V0U3RhdGUoWy4uLnN0YXRlLCB7IGlkOiBsaW5rLCB0aXRsZTogbGluayB9XSk7XG4gICAgc2V0TGluaygnJyk7XG4gIH07XG5cbiAgY29uc3QgbmV3Um91dGUgPSAoKSA9PiB7XG4gICAgUm91dGVyLmJlZm9yZVBvcFN0YXRlKCh7IHVybCwgYXMsIG9wdGlvbnMgfSkgPT4ge1xuICAgICAgLy8gSSBvbmx5IHdhbnQgdG8gYWxsb3cgdGhlc2UgdHdvIHJvdXRlcyFcbiAgICAgIGlmIChhcyAhPT0gJy8nICYmIGFzICE9PSAnL290aGVyJykge1xuICAgICAgICAvLyBIYXZlIFNTUiByZW5kZXIgYmFkIHJvdXRlcyBhcyBhIDQwNC5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBhcztcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPmhvbWU8L3RpdGxlPlxuICAgICAgICA8bWV0YSBuYW1lPVwiZGVzY3JpcHRpb25cIiBjb250ZW50PVwidGhpcyBpcyB0aGUgbWFpbiBwYWdlLi4uXCIgLz5cbiAgICAgIDwvSGVhZD5cbiAgICAgIDxMYXlvdXQ+XG4gICAgICAgIDxoMiBvbkNsaWNrPXtuZXdSb3V0ZX0+TXkgQmxvZzwvaDI+XG4gICAgICAgIDxmb3JtIG9uU3VibWl0PXthZGRMaW5rfT5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwidmFsdWUuLi5cIlxuICAgICAgICAgICAgdmFsdWU9e2xpbmt9XG4gICAgICAgICAgICBvbkNoYW5nZT17ZSA9PiBzZXRMaW5rKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Zvcm0+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICB7c3RhdGUubWFwKHBvc3QgPT4gKFxuICAgICAgICAgICAgPFBvc3RMaW5rIGtleT17cG9zdC5pZH0gaWQ9e3Bvc3QuaWR9IHRpdGxlPXtwb3N0LnRpdGxlfSAvPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L3VsPlxuICAgICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICB9XG4gICAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDwvTGF5b3V0PlxuICAgIDwvPlxuICApO1xufSJdfQ== */\\n/*@ sourceURL=/home/mike/Desktop/learning/nextjs-test/pages/index.js */\")));\n});","map":{"version":3,"sources":["/home/mike/Desktop/learning/nextjs-test/pages/index.js"],"names":["useState","Link","Head","Router","Layout","PostLink","id","title","state","setState","link","setLink","addLink","e","preventDefault","newRoute","beforePopState","url","as","options","window","location","href","target","value","map","post"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport Layout from '../components/MyLayout';\n\nconst PostLink = ({ id, title }) => (\n  <li>\n    {/* No tener rutas con el mismo parametro {\"foo\": \"abc\", \"foo\": \"456\"} /abc?foo=456 */}\n    {/* [...params] @campturamos todos las rutas /a/b/c/d... */}\n    <Link href=\"/post/[id]\" as={`/post/${id}`}>\n      <a>{title}</a>\n    </Link>\n  </li>\n);\n\nexport default () => {\n  const [state, setState] = useState([\n    { id: 'hello-next', title: 'Hello Next.js' },\n    { id: 'learn-next', title: 'Learn Next.js is awesome' },\n    { id: 'deploy-next', title: 'Deploy apps with Zeit' }\n  ]);\n\n  const [link, setLink] = useState('');\n\n  const addLink = e => {\n    e.preventDefault();\n    setState([...state, { id: link, title: link }]);\n    setLink('');\n  };\n\n  const newRoute = () => {\n    Router.beforePopState(({ url, as, options }) => {\n      // I only want to allow these two routes!\n      if (as !== '/' && as !== '/other') {\n        // Have SSR render bad routes as a 404.\n        window.location.href = as;\n        return false;\n      }\n\n      return true;\n    });\n  };\n\n  return (\n    <>\n      <Head>\n        <title>home</title>\n        <meta name=\"description\" content=\"this is the main page...\" />\n      </Head>\n      <Layout>\n        <h2 onClick={newRoute}>My Blog</h2>\n        <form onSubmit={addLink}>\n          <input\n            type=\"text\"\n            placeholder=\"value...\"\n            value={link}\n            onChange={e => setLink(e.target.value)}\n          />\n        </form>\n        <ul>\n          {state.map(post => (\n            <PostLink key={post.id} id={post.id} title={post.title} />\n          ))}\n        </ul>\n        <style jsx global>{`\n          h2 {\n            font-size: 1.2rem;\n            text-transform: uppercase;\n          }\n        `}</style>\n      </Layout>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}