{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport axios from 'axios';\n\nconst CustomServer = ({\n  data\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Custom server\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"this is a tv route\"\n  })), __jsx(Layout, null, __jsx(\"div\", {\n    className: \"jsx-2551277594\"\n  }, __jsx(\"h2\", {\n    className: \"jsx-2551277594\"\n  }, \"Custom Server\"), __jsx(\"table\", {\n    border: \"1\",\n    className: \"jsx-2551277594\"\n  }, __jsx(\"thead\", {\n    className: \"jsx-2551277594\"\n  }, __jsx(\"th\", {\n    className: \"jsx-2551277594\"\n  }, \"USERS\"), __jsx(\"th\", {\n    className: \"jsx-2551277594\"\n  }, \"@\")), data.map(user => __jsx(\"tbody\", {\n    key: user._id,\n    className: \"jsx-2551277594\"\n  }, __jsx(\"td\", {\n    className: \"jsx-2551277594\"\n  }, user.name), __jsx(\"td\", {\n    className: \"jsx-2551277594\"\n  }, user.email)))), __jsx(\"button\", {\n    className: \"jsx-2551277594\"\n  }, \"add user\"), __jsx(_JSXStyle, {\n    id: \"2551277594\"\n  }, \"table.jsx-2551277594{width:50%;margin:2rem auto;border:none;}thead.jsx-2551277594{background:#000;color:#fff;}tbody.jsx-2551277594{background:#fefefe;color:#333;}th.jsx-2551277594,td.jsx-2551277594{border-radiud:5px;padding:.5rem 1rem;border:none;}button.jsx-2551277594{margin-top:2rem;padding:.5rem 1rem;background:black;border:none;color:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21pa2UvRGVza3RvcC9sZWFybmluZy9uZXh0anMtdGVzdC9wYWdlcy9jdXN0b20tc2VydmVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZCYSxBQUcyQixBQUtNLEFBSUcsQUFJRCxBQUtGLFVBakJDLE1BS04sQUFhUSxFQUxBLENBSlIsUUFSQyxBQUtkLEdBSUEsS0FTbUIsRUFMTCxFQVpkLFVBYUEsR0FLYyxZQUNBLFlBQ2QiLCJmaWxlIjoiL2hvbWUvbWlrZS9EZXNrdG9wL2xlYXJuaW5nL25leHRqcy10ZXN0L3BhZ2VzL2N1c3RvbS1zZXJ2ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTXlMYXlvdXQnO1xuaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJ1xuXG5jb25zdCBDdXN0b21TZXJ2ZXIgPSAoeyBkYXRhIH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT5DdXN0b20gc2VydmVyPC90aXRsZT5cbiAgICAgICAgPG1ldGEgbmFtZT1cImRlc2NyaXB0aW9uXCIgY29udGVudD1cInRoaXMgaXMgYSB0diByb3V0ZVwiIC8+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8TGF5b3V0PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxoMj5DdXN0b20gU2VydmVyPC9oMj5cbiAgICAgICAgICA8dGFibGUgYm9yZGVyPScxJz5cbiAgICAgICAgICAgIDx0aGVhZD5cbiAgICAgICAgICAgICAgPHRoPlVTRVJTPC90aD5cbiAgICAgICAgICAgICAgPHRoPkA8L3RoPlxuICAgICAgICAgICAgPC90aGVhZD5cbiAgICAgICAgICAgIHtkYXRhLm1hcCgodXNlcikgPT4gKFxuICAgICAgICAgICAgICA8dGJvZHkga2V5PXt1c2VyLl9pZH0+XG4gICAgICAgICAgICAgICAgPHRkPnt1c2VyLm5hbWV9PC90ZD5cbiAgICAgICAgICAgICAgICA8dGQ+e3VzZXIuZW1haWx9PC90ZD5cbiAgICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgICAgPGJ1dHRvbj5hZGQgdXNlcjwvYnV0dG9uPlxuICAgICAgICAgIDxzdHlsZSBqc3g+XG4gICAgICAgICAgICB7YFxuICAgICAgICAgICAgICB0YWJsZSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDJyZW0gYXV0bztcbiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgdGhlYWQge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICMwMDA7XG4gICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgdGJvZHkge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZWZlZmU7XG4gICAgICAgICAgICAgICAgY29sb3I6ICMzMzM7IFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHRoLCB0ZCB7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1ZDogNXB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IC41cmVtIDFyZW07XG4gICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMnJlbTtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAuNXJlbSAxcmVtO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrO1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L0xheW91dD5cbiAgICA8Lz5cbiAgKTtcbn07XG5cbkN1c3RvbVNlcnZlci5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoY3R4KSA9PiB7XG4gIGNvbnN0IHVybCA9IGAke3Byb2Nlc3MuZW52LlVSTH0vYXV0aGA7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICByZXR1cm4geyBkYXRhIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDdXN0b21TZXJ2ZXI7Il19 */\\n/*@ sourceURL=/home/mike/Desktop/learning/nextjs-test/pages/custom-server.js */\"))));\n};\n\nCustomServer.getInitialProps = async ctx => {\n  const url = `${process.env.URL}/auth`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return {\n    data\n  };\n};\n\nexport default CustomServer;","map":{"version":3,"sources":["/home/mike/Desktop/learning/nextjs-test/pages/custom-server.js"],"names":["Layout","Head","fetch","axios","CustomServer","data","map","user","_id","name","email","getInitialProps","ctx","url","process","env","URL","response","json"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACjC,SACE,4BACE,MAAC,IAAD,QACE,qCADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAC;AAAjC,IAFF,CADF,EAKE,MAAC,MAAD,QACE;AAAA;AAAA,KACE;AAAA;AAAA,qBADF,EAEE;AAAO,IAAA,MAAM,EAAC,GAAd;AAAA;AAAA,KACE;AAAA;AAAA,KACE;AAAA;AAAA,aADF,EAEE;AAAA;AAAA,SAFF,CADF,EAKGA,IAAI,CAACC,GAAL,CAAUC,IAAD,IACR;AAAO,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAjB;AAAA;AAAA,KACE;AAAA;AAAA,KAAKD,IAAI,CAACE,IAAV,CADF,EAEE;AAAA;AAAA,KAAKF,IAAI,CAACG,KAAV,CAFF,CADD,CALH,CAFF,EAcE;AAAA;AAAA,gBAdF;AAAA;AAAA,8zGADF,CALF,CADF;AAuDD,CAxDD;;AA0DAN,YAAY,CAACO,eAAb,GAA+B,MAAOC,GAAP,IAAe;AAC5C,QAAMC,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,GAAI,OAA/B;AACA,QAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACW,GAAD,CAA5B;AACA,QAAMR,IAAI,GAAG,MAAMY,QAAQ,CAACC,IAAT,EAAnB;AAEA,SAAO;AAAEb,IAAAA;AAAF,GAAP;AACD,CAND;;AAQA,eAAeD,YAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport axios from 'axios'\n\nconst CustomServer = ({ data }) => {\n  return (\n    <>\n      <Head>\n        <title>Custom server</title>\n        <meta name=\"description\" content=\"this is a tv route\" />\n      </Head>\n      <Layout>\n        <div>\n          <h2>Custom Server</h2>\n          <table border='1'>\n            <thead>\n              <th>USERS</th>\n              <th>@</th>\n            </thead>\n            {data.map((user) => (\n              <tbody key={user._id}>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n              </tbody>\n            ))}\n          </table>\n          <button>add user</button>\n          <style jsx>\n            {`\n              table {\n                width: 50%;\n                margin: 2rem auto;\n                border: none;\n              }\n              thead {\n                background: #000;\n                color: #fff;\n              }\n              tbody {\n                background: #fefefe;\n                color: #333; \n              }\n              th, td {\n                border-radiud: 5px;\n                padding: .5rem 1rem;\n                border: none;\n              }\n              button {\n                margin-top: 2rem;\n                padding: .5rem 1rem;\n                background: black;\n                border: none;\n                color: white;\n              }\n            `}\n          </style>\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nCustomServer.getInitialProps = async (ctx) => {\n  const url = `${process.env.URL}/auth`;\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return { data };\n};\n\nexport default CustomServer;"]},"metadata":{},"sourceType":"module"}