{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/mike/Desktop/learning/nextjs-test/pages/tv.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\n\nvar Tv = function Tv(_ref) {\n  var shows = _ref.shows;\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"tv\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"this is a tv route\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })), __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-768236203\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"jsx-768236203\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Batman Tv show\"), __jsx(\"ul\", {\n    className: \"jsx-768236203\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      className: \"jsx-768236203\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"jsx-768236203\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, show.name)));\n  })), __jsx(_JSXStyle, {\n    id: \"768236203\",\n    __self: this\n  }, \"a.jsx-768236203{color:#99ffcc;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21pa2UvRGVza3RvcC9sZWFybmluZy9uZXh0anMtdGVzdC9wYWdlcy90di5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3QlcsQUFHNkIsY0FDaEIiLCJmaWxlIjoiL2hvbWUvbWlrZS9EZXNrdG9wL2xlYXJuaW5nL25leHRqcy10ZXN0L3BhZ2VzL3R2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5cbmNvbnN0IFR2ID0gKHsgc2hvd3MgfSkgPT4gKFxuICA8PlxuICAgIDxIZWFkPlxuICAgICAgPHRpdGxlPnR2PC90aXRsZT5cbiAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCJ0aGlzIGlzIGEgdHYgcm91dGVcIiAvPlxuICAgIDwvSGVhZD5cbiAgICA8TGF5b3V0PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGgyPkJhdG1hbiBUdiBzaG93PC9oMj5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIHtzaG93cy5tYXAoc2hvdyA9PiAoXG4gICAgICAgICAgICA8bGkga2V5PXtzaG93LmlkfT5cbiAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7c2hvdy5pZH1gfT5cbiAgICAgICAgICAgICAgICA8YT57c2hvdy5uYW1lfTwvYT5cbiAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC91bD5cbiAgICAgICAgPHN0eWxlIGpzeD5cbiAgICAgICAgICB7YFxuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgIGNvbG9yOiAjOTlmZmNjO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIGB9XG4gICAgICAgIDwvc3R5bGU+XG4gICAgICA8L2Rpdj5cbiAgICA8L0xheW91dD5cbiAgPC8+XG4pO1xuXG5Udi5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoY3R4KSA9PiB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS50dm1hemUuY29tL3NlYXJjaC9zaG93cz9xPWF2ZW5nZXJzJyk7XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG4gIHJldHVybiB7IHNob3dzOiBkYXRhLm1hcChlbnRyeSA9PiBlbnRyeS5zaG93KSB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVHY7XG4iXX0= */\\n/*@ sourceURL=/home/mike/Desktop/learning/nextjs-test/pages/tv.js */\"))));\n};\n\nTv.getInitialProps = function _callee(ctx) {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=avengers'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Tv;","map":{"version":3,"sources":["/home/mike/Desktop/learning/nextjs-test/pages/tv.js"],"names":["Layout","Link","Head","fetch","Tv","shows","map","show","id","name","getInitialProps","ctx","res","json","data","entry"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,EAAE,GAAG,SAALA,EAAK;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACT,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAC,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADF,CADF,CADa;AAAA,GAAd,CADH,CAFF;AAAA;AAAA;AAAA,2wDADF,CALF,CADS;AAAA,CAAX;;AA8BAL,EAAE,CAACM,eAAH,GAAqB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACDR,KAAK,CAAC,gDAAD,CADJ;;AAAA;AACbS,UAAAA,GADa;AAAA;AAAA,2CAEAA,GAAG,CAACC,IAAJ,EAFA;;AAAA;AAEbC,UAAAA,IAFa;AAAA,2CAIZ;AAAET,YAAAA,KAAK,EAAES,IAAI,CAACR,GAAL,CAAS,UAAAS,KAAK;AAAA,qBAAIA,KAAK,CAACR,IAAV;AAAA,aAAd;AAAT,WAJY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;AAOA,eAAeH,EAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\n\nconst Tv = ({ shows }) => (\n  <>\n    <Head>\n      <title>tv</title>\n      <meta name=\"description\" content=\"this is a tv route\" />\n    </Head>\n    <Layout>\n      <div>\n        <h2>Batman Tv show</h2>\n        <ul>\n          {shows.map(show => (\n            <li key={show.id}>\n              <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n                <a>{show.name}</a>\n              </Link>\n            </li>\n          ))}\n        </ul>\n        <style jsx>\n          {`\n            a {\n              color: #99ffcc;\n            }\n          `}\n        </style>\n      </div>\n    </Layout>\n  </>\n);\n\nTv.getInitialProps = async (ctx) => {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=avengers');\n  const data = await res.json();\n\n  return { shows: data.map(entry => entry.show) };\n};\n\nexport default Tv;\n"]},"metadata":{},"sourceType":"module"}